{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/wrapNativeSuper","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./c132ab4f.js","data":{"isAsync":false}},{"name":"./43297fe2.js","data":{"isAsync":false}},{"name":"./fb20d9f9.js","data":{"isAsync":false}},{"name":"./e7efb4be.js","data":{"isAsync":false}},{"name":"react-native-svg","data":{"isAsync":false}},{"name":"./19706f5e.js","data":{"isAsync":false}},{"name":"react-native-fast-image","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.I = Image;\n  exports.c = createUnsyncedGuid;\n  exports.g = getFsFileName;\n  exports.i = isSpecialAttributeName;\n  exports.j = jsonToObject;\n  exports.o = objectToJson;\n  exports.p = post;\n  exports.r = registerMiddleware;\n  exports.w = wasGuidSynced;\n  exports.a = exports.U = exports.T = exports.S = exports.N = exports.D = exports.C = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/wrapNativeSuper\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _react = _$$_REQUIRE(_dependencyMap[12], \"react\");\n\n  var _c132ab4f = _$$_REQUIRE(_dependencyMap[13], \"./c132ab4f.js\");\n\n  var _fe = _$$_REQUIRE(_dependencyMap[14], \"./43297fe2.js\");\n\n  var _fb20d9f = _$$_REQUIRE(_dependencyMap[15], \"./fb20d9f9.js\");\n\n  var _e7efb4be = _$$_REQUIRE(_dependencyMap[16], \"./e7efb4be.js\");\n\n  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[17], \"react-native-svg\");\n\n  var _f5e = _$$_REQUIRE(_dependencyMap[18], \"./19706f5e.js\");\n\n  var extractorRegExps = {\n    height: /\\sheight=(['\"])([^%]+?)\\1/,\n    root: /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/,\n    viewbox: /\\sviewBox=(['\"])(.+?)\\1/,\n    width: /\\swidth=(['\"])([^%]+?)\\1/\n  },\n      units = {\n    cm: 96 / 2.54,\n    em: 16,\n    ex: 8,\n    m: 96 / 2.54 * 100,\n    mm: 96 / 2.54 / 10,\n    pc: 96 / 72 / 12,\n    pt: 96 / 72\n  };\n\n  function parseLength(len) {\n    var m = /([0-9.]+)([a-z]*)/.exec(len);\n    if (m) return Math.round(parseFloat(m[1]) * (units[m[2]] || 1));\n  }\n\n  function parseViewbox(viewbox) {\n    var bounds = viewbox.split(\" \");\n    return {\n      height: parseLength(bounds[3]),\n      width: parseLength(bounds[2])\n    };\n  }\n\n  function calculateSvgDimensions(xml) {\n    var root = extractorRegExps.root.exec(xml);\n\n    if (root) {\n      var attrs = function (root) {\n        var width = extractorRegExps.width.exec(root),\n            height = extractorRegExps.height.exec(root),\n            viewbox = extractorRegExps.viewbox.exec(root);\n        return {\n          height: height ? parseLength(height[2]) : void 0,\n          viewbox: viewbox ? parseViewbox(viewbox[2]) : void 0,\n          width: width ? parseLength(width[2]) : void 0\n        };\n      }(root[0]);\n\n      if (attrs.width && attrs.height) return {\n        width: attrs.width,\n        height: attrs.height\n      };\n      if (attrs.viewbox) return function (attrs, viewbox) {\n        var ratio = viewbox.width / viewbox.height;\n        return attrs.width ? {\n          height: Math.floor(attrs.width / ratio),\n          width: attrs.width\n        } : attrs.height ? {\n          height: attrs.height,\n          width: Math.floor(attrs.height * ratio)\n        } : {\n          height: viewbox.height,\n          width: viewbox.width\n        };\n      }(attrs, attrs.viewbox);\n    }\n\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var DEFAULT_FILES_DIRECTORY = \"files\",\n      DOCUMENT_DIR = \"documents\",\n      THUMBNAIL_DIR = \"thumbnails\";\n  exports.T = THUMBNAIL_DIR;\n  exports.D = DOCUMENT_DIR;\n  exports.a = DEFAULT_FILES_DIRECTORY;\n\n  function getFsFileName(guid, changeDate) {\n    return guid.replace(/:/g, \"_\") + \"@\" + (null != changeDate && \"\" !== changeDate ? changeDate.toString() : \"local\");\n  }\n\n  var GUID_REGEXP = new RegExp(\"^GUID:\");\n\n  function createUnsyncedGuid() {\n    return \"GUID:\" + (0, _f5e.j)();\n  }\n\n  function wasGuidSynced(internalGuid) {\n    return !GUID_REGEXP.test(internalGuid);\n  }\n\n  function isSpecialAttributeName(attrName) {\n    return \"guid\" === attrName || \"$\" === attrName[0];\n  }\n\n  function objectToJson(obj) {\n    var attributes = Object.keys(obj).filter(function (attrName) {\n      return !isSpecialAttributeName(attrName);\n    }).reduce(function (acc, key) {\n      return acc[key] = {\n        value: obj[key]\n      }, function (obj, attr) {\n        return obj.$readonlyAttrs.includes(attr);\n      }(obj, key) && (acc[key].readonly = !0), acc;\n    }, {});\n    return {\n      guid: obj.guid,\n      objectType: obj.$objectType,\n      attributes: attributes\n    };\n  }\n\n  function jsonToObject(jsonData) {\n    var dbObj = {\n      guid: jsonData.guid,\n      $objectType: jsonData.objectType,\n      $readonlyAttrs: []\n    };\n\n    for (var key in jsonData.attributes) {\n      dbObj[key] = jsonData.attributes[key].value, jsonData.attributes[key].readonly && dbObj.$readonlyAttrs.push(key);\n    }\n\n    return dbObj;\n  }\n\n  var ConnectionError = function (_Error) {\n    (0, _inherits2.default)(ConnectionError, _Error);\n\n    function ConnectionError(message) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, ConnectionError);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConnectionError).call(this, message)), Object.setPrototypeOf((0, _assertThisInitialized2.default)(_this), ConnectionError.prototype);\n      return _this;\n    }\n\n    return ConnectionError;\n  }((0, _wrapNativeSuper2.default)(Error));\n\n  exports.C = ConnectionError;\n  var middlewares = [];\n\n  function registerMiddleware(middleware) {\n    middlewares.push(middleware);\n  }\n\n  function applyMiddleware(request, actual) {\n    return _regenerator.default.async(function applyMiddleware$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", function doProcess(index, req) {\n              return _regenerator.default.async(function doProcess$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(index === middlewares.length)) {\n                        _context.next = 2;\n                        break;\n                      }\n\n                      return _context.abrupt(\"return\", actual(req));\n\n                    case 2:\n                      return _context.abrupt(\"return\", middlewares[index](req, function (r) {\n                        return doProcess(index + 1, r);\n                      }));\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            }(0, request));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  var ServerError = function (_Error2) {\n    (0, _inherits2.default)(ServerError, _Error2);\n\n    function ServerError(status, message) {\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, ServerError);\n      _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ServerError).call(this, message)), _this2.status = status, Object.setPrototypeOf((0, _assertThisInitialized2.default)(_this2), ServerError.prototype);\n      return _this2;\n    }\n\n    return ServerError;\n  }((0, _wrapNativeSuper2.default)(Error));\n\n  exports.S = ServerError;\n\n  var UnauthorizedError = function (_ServerError) {\n    (0, _inherits2.default)(UnauthorizedError, _ServerError);\n\n    function UnauthorizedError(status) {\n      var _this3;\n\n      (0, _classCallCheck2.default)(this, UnauthorizedError);\n      _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(UnauthorizedError).call(this, status)), Object.setPrototypeOf((0, _assertThisInitialized2.default)(_this3), UnauthorizedError.prototype);\n      return _this3;\n    }\n\n    return UnauthorizedError;\n  }(ServerError);\n\n  exports.U = UnauthorizedError;\n\n  function post(url, data) {\n    var request;\n    return _regenerator.default.async(function post$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            request = {\n              url: url,\n              body: data,\n              init: {\n                method: \"post\",\n                headers: new Headers((0, _extends2.default)({\n                  Accept: \"application/json\"\n                }, (0, _c132ab4f.i)(data) ? {\n                  \"Content-Type\": \"application/json\"\n                } : {})),\n                redirect: \"error\",\n                credentials: \"include\"\n              }\n            };\n            _context3.next = 3;\n            return _regenerator.default.awrap(applyMiddleware(request, doFetch));\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent.json());\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function doFetch(request) {\n    var response, description;\n    return _regenerator.default.async(function doFetch$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!request.init.body) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new _fe.A();\n\n          case 2:\n            request.init.body = (0, _c132ab4f.i)(request.body) ? JSON.stringify(request.body) : request.body;\n            _context4.prev = 3;\n            _context4.next = 6;\n            return _regenerator.default.awrap(window.fetch(request.url, request.init));\n\n          case 6:\n            response = _context4.sent;\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](3);\n            throw new ConnectionError(_context4.t0.message);\n\n          case 12:\n            _context4.t1 = response.status;\n            _context4.next = _context4.t1 === 200 ? 15 : _context4.t1 === 400 ? 16 : _context4.t1 === 401 ? 16 : _context4.t1 === 402 ? 16 : _context4.t1 === 403 ? 16 : _context4.t1 === 460 ? 16 : _context4.t1 === 502 ? 17 : _context4.t1 === 504 ? 17 : _context4.t1 === 551 ? 18 : _context4.t1 === 560 ? 23 : _context4.t1 === 12029 ? 27 : 28;\n            break;\n\n          case 15:\n            return _context4.abrupt(\"return\", response);\n\n          case 16:\n            throw new UnauthorizedError(response.status);\n\n          case 17:\n            throw new ServerError(response.status, response.statusText);\n\n          case 18:\n            _context4.t2 = _e7efb4be.V;\n            _context4.next = 21;\n            return _regenerator.default.awrap(response.json());\n\n          case 21:\n            _context4.t3 = _context4.sent;\n            throw new _context4.t2(_context4.t3);\n\n          case 23:\n            _context4.next = 25;\n            return _regenerator.default.awrap(getXasErrorDescription(response));\n\n          case 25:\n            description = _context4.sent;\n            throw description ? new _f5e.D(description) : new ServerError(response.status);\n\n          case 27:\n            throw new ConnectionError(\"No connection\");\n\n          case 28:\n            _context4.t4 = ServerError;\n            _context4.t5 = response.status;\n            _context4.next = 32;\n            return _regenerator.default.awrap(getXasErrorDescription(response));\n\n          case 32:\n            _context4.t6 = _context4.sent;\n            throw new _context4.t4(_context4.t5, _context4.t6);\n\n          case 34:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[3, 9]]);\n  }\n\n  function getXasErrorDescription(response) {\n    var json;\n    return _regenerator.default.async(function getXasErrorDescription$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regenerator.default.awrap(response.json());\n\n          case 2:\n            json = _context5.sent;\n            return _context5.abrupt(\"return\", json && \"description\" in json ? json.description : void 0);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  FormData.prototype.append = function (key, value, name) {\n    \"blob\" === key && value.nativePayload && (value = value.nativePayload, name && (value.name = name)), this._parts.push([key, value]);\n  };\n\n  var NativeFileBackend = function () {\n    function NativeFileBackend(rootDirectory) {\n      (0, _classCallCheck2.default)(this, NativeFileBackend);\n      this.rootDirectory = rootDirectory;\n    }\n\n    (0, _createClass2.default)(NativeFileBackend, [{\n      key: \"listDir\",\n      value: function listDir(dirPath) {\n        return _regenerator.default.async(function listDir$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", _reactNative.NativeModules.NativeFsModule.list(relativeToAbsolutePath(dirPath)));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"removeDir\",\n      value: function removeDir(dirPath) {\n        return _regenerator.default.async(function removeDir$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", _reactNative.NativeModules.NativeFsModule.remove(relativeToAbsolutePath(dirPath)));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"readFile\",\n      value: function readFile(filePath) {\n        var blob;\n        return _regenerator.default.async(function readFile$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                blob = new Blob();\n                return _context8.abrupt(\"return\", (blob.nativePayload = {\n                  uri: \"file://\" + relativeToAbsolutePath(filePath),\n                  name: filePath.substring(filePath.lastIndexOf(\"/\") + 1),\n                  type: \"*/*\"\n                }, blob));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"storeFile\",\n      value: function storeFile(blob, filePath) {\n        return _regenerator.default.async(function storeFile$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _regenerator.default.awrap(_reactNative.NativeModules.NativeFsModule.save(blob.data, relativeToAbsolutePath(filePath)));\n\n              case 2:\n                blob.close();\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"moveFile\",\n      value: function moveFile(filePath, newPath) {\n        return _regenerator.default.async(function moveFile$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", _reactNative.NativeModules.NativeFsModule.move(relativeToAbsolutePath(filePath), relativeToAbsolutePath(newPath)));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"removeFile\",\n      value: function removeFile(filePath) {\n        return _regenerator.default.async(function removeFile$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", _reactNative.NativeModules.NativeFsModule.remove(relativeToAbsolutePath(filePath)));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"downloadFile\",\n      value: function downloadFile(url, filePath) {\n        var blob;\n        return _regenerator.default.async(function downloadFile$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return _regenerator.default.awrap(function _callee(url, handleAs) {\n                  var request, response;\n                  return _regenerator.default.async(function _callee$(_context12) {\n                    while (1) {\n                      switch (_context12.prev = _context12.next) {\n                        case 0:\n                          request = {\n                            url: url,\n                            init: {\n                              method: \"get\",\n                              headers: new Headers(),\n                              cache: \"force-cache\",\n                              credentials: \"include\"\n                            }\n                          };\n                          _context12.next = 3;\n                          return _regenerator.default.awrap(applyMiddleware(request, doFetch));\n\n                        case 3:\n                          response = _context12.sent;\n\n                          if (response.ok) {\n                            _context12.next = 6;\n                            break;\n                          }\n\n                          throw new ServerError(response.status, response.statusText);\n\n                        case 6:\n                          _context12.t0 = handleAs;\n                          _context12.next = _context12.t0 === \"text\" ? 9 : _context12.t0 === \"json\" ? 10 : _context12.t0 === \"blob\" ? 11 : 12;\n                          break;\n\n                        case 9:\n                          return _context12.abrupt(\"return\", response.text());\n\n                        case 10:\n                          return _context12.abrupt(\"return\", response.json());\n\n                        case 11:\n                          return _context12.abrupt(\"return\", response.blob());\n\n                        case 12:\n                        case \"end\":\n                          return _context12.stop();\n                      }\n                    }\n                  });\n                }(url, \"blob\"));\n\n              case 2:\n                blob = _context13.sent;\n                _context13.next = 5;\n                return _regenerator.default.awrap(_reactNative.NativeModules.NativeFsModule.save(blob.data, relativeToAbsolutePath(filePath)));\n\n              case 5:\n                blob.close();\n\n              case 6:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        });\n      }\n    }, {\n      key: \"toAbsolutePath\",\n      value: function toAbsolutePath(path) {\n        return function (rootDirectory, path) {\n          return rootDirectory + \"/\" + path;\n        }(this.rootDirectory, path);\n      }\n    }], [{\n      key: \"readAsDataURL\",\n      value: function readAsDataURL(filePath) {\n        return _regenerator.default.async(function readAsDataURL$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                return _context14.abrupt(\"return\", _reactNative.NativeModules.NativeFsModule.readAsDataURL(relativeToAbsolutePath(filePath)));\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        });\n      }\n    }]);\n    return NativeFileBackend;\n  }();\n\n  exports.N = NativeFileBackend;\n\n  function relativeToAbsolutePath(path) {\n    var DocumentDirectoryPath = _reactNative.NativeModules.NativeFsModule.DocumentDirectoryPath;\n    return path.includes(DocumentDirectoryPath) ? path : [DocumentDirectoryPath, path].join(\"/\");\n  }\n\n  var OptionalFastImage;\n\n  function Image(_ref) {\n    var testID = _ref.testID,\n        source = _ref.source,\n        style = _ref.style,\n        color = _ref.color;\n\n    switch (typeof source) {\n      case \"undefined\":\n        return null;\n\n      case \"string\":\n        var dimensions = (0, _react.useMemo)(function () {\n          return calculateSvgDimensions(source);\n        }, [source]);\n        return (0, _react.createElement)(_reactNativeSvg.SvgXml, (0, _extends2.default)({\n          xml: source,\n          style: _reactNative.StyleSheet.flatten([{\n            width: dimensions.width,\n            height: dimensions.height\n          }, style]),\n          width: void 0,\n          height: void 0,\n          testID: testID\n        }, void 0 !== color ? {\n          fill: color,\n          color: color\n        } : {\n          color: \"black\"\n        }));\n\n      default:\n        if (void 0 === OptionalFastImage) return (0, _react.createElement)(LegacyImage, {\n          source: source,\n          style: style,\n          testID: testID\n        });\n\n        var _a = _reactNative.StyleSheet.flatten(null != style ? style : []),\n            resizeMode = _a.resizeMode,\n            styleRest = (0, _fb20d9f._)(_a, [\"resizeMode\"]),\n            _Image$1$resolveAsset = _reactNative.Image.resolveAssetSource(source),\n            width = _Image$1$resolveAsset.width,\n            height = _Image$1$resolveAsset.height;\n\n        var realSource = source;\n        return \"number\" == typeof source || \"string\" != typeof source.uri || source.uri.startsWith(\"http\") || source.uri.startsWith(\"file:\") || (realSource = (0, _extends2.default)((0, _extends2.default)({}, source), {\n          uri: \"file:///\" + source.uri\n        })), (0, _react.createElement)(OptionalFastImage, {\n          source: realSource,\n          style: (0, _extends2.default)({\n            width: width,\n            height: height\n          }, styleRest),\n          resizeMode: resizeMode\n        });\n    }\n  }\n\n  function LegacyImage(_ref2) {\n    var source = _ref2.source,\n        style = _ref2.style,\n        testID = _ref2.testID;\n    if (\"number\" == typeof source) return (0, _react.createElement)(_reactNative.Image, {\n      source: source,\n      style: style,\n      fadeDuration: 0,\n      testID: testID\n    });\n\n    var _useState = (0, _react.useState)(\"\"),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        dataSource = _useState2[0],\n        setDataSource = _useState2[1];\n\n    return (0, _react.useEffect)(function () {\n      void 0 !== source.uri ? NativeFileBackend.readAsDataURL(source.uri).then(function (res) {\n        return setDataSource(res);\n      }).catch(function (e) {\n        setDataSource(\"\"), mx.onError(e);\n      }) : setDataSource(\"\");\n    }, [source]), 0 === dataSource.length ? null : (0, _react.createElement)(_reactNative.Image, {\n      source: {\n        uri: dataSource\n      },\n      style: style,\n      fadeDuration: 0,\n      testID: testID\n    });\n  }\n\n  null != _reactNative.NativeModules.FastImageView && (OptionalFastImage = _$$_REQUIRE(_dependencyMap[19], \"react-native-fast-image\").default);\n});","map":[[38,0,1,0],[40,0,1,68],[42,0,1,128],[44,0,1,167],[46,0,1,214],[48,0,1,253],[50,0,1,301],[52,0,1,338],[54,0,1,408],[54,6,1,414,"extractorRegExps"],[54,22,1,430],[54,25,1,431],[55,0,1,432,"height"],[55,4,1,432,"height"],[55,10,1,438],[55,12,1,439],[55,39,1,431],[56,0,1,467,"root"],[56,4,1,467,"root"],[56,8,1,471],[56,10,1,472],[56,44,1,431],[57,0,1,507,"viewbox"],[57,4,1,507,"viewbox"],[57,11,1,514],[57,13,1,515],[57,38,1,431],[58,0,1,541,"width"],[58,4,1,541,"width"],[58,9,1,546],[58,11,1,547],[59,0,1,431],[59,3,1,408],[60,0,1,408],[60,6,1,575,"units"],[60,11,1,580],[60,14,1,581],[61,0,1,582,"cm"],[61,4,1,582,"cm"],[61,6,1,584],[61,8,1,585],[61,13,1,588],[61,17,1,581],[62,0,1,593,"em"],[62,4,1,593,"em"],[62,6,1,595],[62,8,1,596],[62,10,1,581],[63,0,1,599,"ex"],[63,4,1,599,"ex"],[63,6,1,601],[63,8,1,602],[63,9,1,581],[64,0,1,604,"m"],[64,4,1,604,"m"],[64,5,1,605],[64,7,1,606],[64,12,1,609],[64,16,1,606],[64,19,1,614],[64,22,1,581],[65,0,1,618,"mm"],[65,4,1,618,"mm"],[65,6,1,620],[65,8,1,621],[65,13,1,624],[65,17,1,621],[65,20,1,629],[65,22,1,581],[66,0,1,632,"pc"],[66,4,1,632,"pc"],[66,6,1,634],[66,8,1,635],[66,13,1,638],[66,15,1,635],[66,18,1,641],[66,20,1,581],[67,0,1,644,"pt"],[67,4,1,644,"pt"],[67,6,1,646],[67,8,1,647],[67,13,1,650],[68,0,1,581],[68,3,1,408],[70,0,1,654],[70,11,1,663,"parseLength"],[70,22,1,654],[70,23,1,675,"len"],[70,26,1,654],[70,28,1,679],[71,0,1,680],[71,8,1,686,"m"],[71,9,1,687],[71,12,1,688],[71,32,1,708,"exec"],[71,36,1,688],[71,37,1,713,"len"],[71,40,1,688],[71,41,1,680],[72,0,1,718],[72,8,1,721,"m"],[72,9,1,718],[72,11,1,723],[72,18,1,730,"Math"],[72,22,1,734],[72,23,1,735,"round"],[72,28,1,730],[72,29,1,741,"parseFloat"],[72,39,1,751],[72,40,1,752,"m"],[72,41,1,753],[72,42,1,754],[72,43,1,753],[72,44,1,751],[72,45,1,741],[72,49,1,759,"units"],[72,54,1,764],[72,55,1,765,"m"],[72,56,1,766],[72,57,1,767],[72,58,1,766],[72,59,1,764],[72,60,1,759],[72,64,1,772],[72,65,1,741],[72,66,1,730],[72,67,1,723],[73,0,1,776],[75,0,1,776],[75,11,1,785,"parseViewbox"],[75,23,1,776],[75,24,1,798,"viewbox"],[75,31,1,776],[75,33,1,806],[76,0,1,807],[76,8,1,813,"bounds"],[76,14,1,819],[76,17,1,820,"viewbox"],[76,24,1,827],[76,25,1,828,"split"],[76,30,1,820],[76,31,1,834],[76,34,1,820],[76,35,1,807],[77,0,1,839],[77,11,1,845],[78,0,1,846,"height"],[78,6,1,846,"height"],[78,12,1,852],[78,14,1,853,"parseLength"],[78,25,1,864],[78,26,1,865,"bounds"],[78,32,1,871],[78,33,1,872],[78,34,1,871],[78,35,1,864],[78,36,1,845],[79,0,1,876,"width"],[79,6,1,876,"width"],[79,11,1,881],[79,13,1,882,"parseLength"],[79,24,1,893],[79,25,1,894,"bounds"],[79,31,1,900],[79,32,1,901],[79,33,1,900],[79,34,1,893],[80,0,1,845],[80,5,1,839],[81,0,1,906],[83,0,1,906],[83,11,1,915,"calculateSvgDimensions"],[83,33,1,906],[83,34,1,938,"xml"],[83,37,1,906],[83,39,1,942],[84,0,1,943],[84,8,1,949,"root"],[84,12,1,953],[84,15,1,954,"extractorRegExps"],[84,31,1,970],[84,32,1,971,"root"],[84,36,1,954],[84,37,1,976,"exec"],[84,41,1,954],[84,42,1,981,"xml"],[84,45,1,954],[84,46,1,943],[86,0,1,986],[86,8,1,989,"root"],[86,12,1,986],[86,14,1,994],[87,0,1,995],[87,10,1,1001,"attrs"],[87,15,1,1006],[87,18,1,1007],[87,28,1,1016,"root"],[87,32,1,1007],[87,34,1,1021],[88,0,1,1022],[88,12,1,1028,"width"],[88,17,1,1033],[88,20,1,1034,"extractorRegExps"],[88,36,1,1050],[88,37,1,1051,"width"],[88,42,1,1034],[88,43,1,1057,"exec"],[88,47,1,1034],[88,48,1,1062,"root"],[88,52,1,1034],[88,53,1,1022],[89,0,1,1022],[89,12,1,1068,"height"],[89,18,1,1074],[89,21,1,1075,"extractorRegExps"],[89,37,1,1091],[89,38,1,1092,"height"],[89,44,1,1075],[89,45,1,1099,"exec"],[89,49,1,1075],[89,50,1,1104,"root"],[89,54,1,1075],[89,55,1,1022],[90,0,1,1022],[90,12,1,1110,"viewbox"],[90,19,1,1117],[90,22,1,1118,"extractorRegExps"],[90,38,1,1134],[90,39,1,1135,"viewbox"],[90,46,1,1118],[90,47,1,1143,"exec"],[90,51,1,1118],[90,52,1,1148,"root"],[90,56,1,1118],[90,57,1,1022],[91,0,1,1154],[91,15,1,1160],[92,0,1,1161,"height"],[92,10,1,1161,"height"],[92,16,1,1167],[92,18,1,1168,"height"],[92,24,1,1174],[92,27,1,1175,"parseLength"],[92,38,1,1186],[92,39,1,1187,"height"],[92,45,1,1193],[92,46,1,1194],[92,47,1,1193],[92,48,1,1186],[92,49,1,1174],[92,52,1,1198],[92,57,1,1203],[92,58,1,1160],[93,0,1,1205,"viewbox"],[93,10,1,1205,"viewbox"],[93,17,1,1212],[93,19,1,1213,"viewbox"],[93,26,1,1220],[93,29,1,1221,"parseViewbox"],[93,41,1,1233],[93,42,1,1234,"viewbox"],[93,49,1,1241],[93,50,1,1242],[93,51,1,1241],[93,52,1,1233],[93,53,1,1220],[93,56,1,1246],[93,61,1,1251],[93,62,1,1160],[94,0,1,1253,"width"],[94,10,1,1253,"width"],[94,15,1,1258],[94,17,1,1259,"width"],[94,22,1,1264],[94,25,1,1265,"parseLength"],[94,36,1,1276],[94,37,1,1277,"width"],[94,42,1,1282],[94,43,1,1283],[94,44,1,1282],[94,45,1,1276],[94,46,1,1264],[94,49,1,1287],[94,54,1,1292],[95,0,1,1160],[95,9,1,1154],[96,0,1,1295],[96,7,1,1007],[96,8,1,1296,"root"],[96,12,1,1300],[96,13,1,1301],[96,14,1,1300],[96,15,1,1007],[96,16,1,995],[98,0,1,1305],[98,10,1,1308,"attrs"],[98,15,1,1313],[98,16,1,1314,"width"],[98,21,1,1308],[98,25,1,1321,"attrs"],[98,30,1,1326],[98,31,1,1327,"height"],[98,37,1,1305],[98,39,1,1334],[98,46,1,1340],[99,0,1,1341,"width"],[99,8,1,1341,"width"],[99,13,1,1346],[99,15,1,1347,"attrs"],[99,20,1,1352],[99,21,1,1353,"width"],[99,26,1,1340],[100,0,1,1359,"height"],[100,8,1,1359,"height"],[100,14,1,1365],[100,16,1,1366,"attrs"],[100,21,1,1371],[100,22,1,1372,"height"],[101,0,1,1340],[101,7,1,1334],[102,0,1,1380],[102,10,1,1383,"attrs"],[102,15,1,1388],[102,16,1,1389,"viewbox"],[102,23,1,1380],[102,25,1,1397],[102,32,1,1404],[102,42,1,1413,"attrs"],[102,47,1,1404],[102,49,1,1419,"viewbox"],[102,56,1,1404],[102,58,1,1427],[103,0,1,1428],[103,12,1,1434,"ratio"],[103,17,1,1439],[103,20,1,1440,"viewbox"],[103,27,1,1447],[103,28,1,1448,"width"],[103,33,1,1440],[103,36,1,1454,"viewbox"],[103,43,1,1461],[103,44,1,1462,"height"],[103,50,1,1428],[104,0,1,1469],[104,15,1,1476,"attrs"],[104,20,1,1481],[104,21,1,1482,"width"],[104,26,1,1476],[104,29,1,1488],[105,0,1,1489,"height"],[105,10,1,1489,"height"],[105,16,1,1495],[105,18,1,1496,"Math"],[105,22,1,1500],[105,23,1,1501,"floor"],[105,28,1,1496],[105,29,1,1507,"attrs"],[105,34,1,1512],[105,35,1,1513,"width"],[105,40,1,1507],[105,43,1,1519,"ratio"],[105,48,1,1496],[105,49,1,1488],[106,0,1,1526,"width"],[106,10,1,1526,"width"],[106,15,1,1531],[106,17,1,1532,"attrs"],[106,22,1,1537],[106,23,1,1538,"width"],[107,0,1,1488],[107,9,1,1476],[107,12,1,1545,"attrs"],[107,17,1,1550],[107,18,1,1551,"height"],[107,24,1,1545],[107,27,1,1558],[108,0,1,1559,"height"],[108,10,1,1559,"height"],[108,16,1,1565],[108,18,1,1566,"attrs"],[108,23,1,1571],[108,24,1,1572,"height"],[108,30,1,1558],[109,0,1,1579,"width"],[109,10,1,1579,"width"],[109,15,1,1584],[109,17,1,1585,"Math"],[109,21,1,1589],[109,22,1,1590,"floor"],[109,27,1,1585],[109,28,1,1596,"attrs"],[109,33,1,1601],[109,34,1,1602,"height"],[109,40,1,1596],[109,43,1,1609,"ratio"],[109,48,1,1585],[110,0,1,1558],[110,9,1,1545],[110,12,1,1617],[111,0,1,1618,"height"],[111,10,1,1618,"height"],[111,16,1,1624],[111,18,1,1625,"viewbox"],[111,25,1,1632],[111,26,1,1633,"height"],[111,32,1,1617],[112,0,1,1640,"width"],[112,10,1,1640,"width"],[112,15,1,1645],[112,17,1,1646,"viewbox"],[112,24,1,1653],[112,25,1,1654,"width"],[113,0,1,1617],[113,9,1,1469],[114,0,1,1661],[114,7,1,1404],[114,8,1,1662,"attrs"],[114,13,1,1404],[114,15,1,1668,"attrs"],[114,20,1,1673],[114,21,1,1674,"viewbox"],[114,28,1,1404],[114,29,1,1397],[115,0,1,1683],[117,0,1,1683],[117,11,1,1689],[118,0,1,1690,"width"],[118,6,1,1690,"width"],[118,11,1,1695],[118,13,1,1696],[118,14,1,1689],[119,0,1,1698,"height"],[119,6,1,1698,"height"],[119,12,1,1704],[119,14,1,1705],[120,0,1,1689],[120,5,1,1683],[121,0,1,1708],[123,0,1,1708],[123,6,1,1714,"DEFAULT_FILES_DIRECTORY"],[123,29,1,1737],[123,32,1,1738],[123,39,1,1708],[124,0,1,1708],[124,6,1,1746,"DOCUMENT_DIR"],[124,18,1,1758],[124,21,1,1759],[124,32,1,1708],[125,0,1,1708],[125,6,1,1771,"THUMBNAIL_DIR"],[125,19,1,1784],[125,22,1,1785],[125,34,1,1708],[130,0,1,1798],[130,11,1,1807,"getFsFileName"],[130,24,1,1798],[130,25,1,1821,"guid"],[130,29,1,1798],[130,31,1,1826,"changeDate"],[130,41,1,1798],[130,43,1,1837],[131,0,1,1838],[131,11,1,1845,"guid"],[131,15,1,1849],[131,16,1,1850,"replace"],[131,23,1,1845],[131,24,1,1858],[131,28,1,1845],[131,30,1,1863],[131,33,1,1845],[131,37,1,1868],[131,40,1,1845],[131,44,1,1873],[131,52,1,1879,"changeDate"],[131,62,1,1873],[131,66,1,1891],[131,73,1,1896,"changeDate"],[131,83,1,1873],[131,86,1,1907,"changeDate"],[131,96,1,1917],[131,97,1,1918,"toString"],[131,105,1,1907],[131,107,1,1873],[131,110,1,1929],[131,117,1,1845],[131,118,1,1838],[132,0,1,1938],[134,0,1,1938],[134,6,1,1944,"GUID_REGEXP"],[134,17,1,1955],[134,20,1,1956],[134,24,1,1960,"RegExp"],[134,30,1,1956],[134,31,1,1967],[134,39,1,1956],[134,40,1,1938],[136,0,1,1977],[136,11,1,1986,"createUnsyncedGuid"],[136,29,1,1977],[136,32,1,2006],[137,0,1,2007],[137,11,1,2013],[137,21,1,2021],[137,34,1,2007],[138,0,1,2035],[140,0,1,2035],[140,11,1,2044,"wasGuidSynced"],[140,24,1,2035],[140,25,1,2058,"internalGuid"],[140,37,1,2035],[140,39,1,2071],[141,0,1,2072],[141,11,1,2078],[141,12,1,2079,"GUID_REGEXP"],[141,23,1,2090],[141,24,1,2091,"test"],[141,28,1,2079],[141,29,1,2096,"internalGuid"],[141,41,1,2079],[141,42,1,2072],[142,0,1,2110],[144,0,1,2110],[144,11,1,2119,"isSpecialAttributeName"],[144,33,1,2110],[144,34,1,2142,"attrName"],[144,42,1,2110],[144,44,1,2151],[145,0,1,2152],[145,11,1,2158],[145,22,1,2167,"attrName"],[145,30,1,2158],[145,34,1,2177],[145,42,1,2183,"attrName"],[145,50,1,2191],[145,51,1,2192],[145,52,1,2191],[145,53,1,2152],[146,0,1,2195],[148,0,1,2195],[148,11,1,2204,"objectToJson"],[148,23,1,2195],[148,24,1,2217,"obj"],[148,27,1,2195],[148,29,1,2221],[149,0,1,2222],[149,8,1,2228,"attributes"],[149,18,1,2238],[149,21,1,2239,"Object"],[149,27,1,2245],[149,28,1,2246,"keys"],[149,32,1,2239],[149,33,1,2251,"obj"],[149,36,1,2239],[149,38,1,2256,"filter"],[149,44,1,2239],[149,45,1,2263],[149,55,1,2263,"attrName"],[149,63,1,2271],[150,0,1,2271],[150,13,1,2273],[150,14,1,2274,"isSpecialAttributeName"],[150,36,1,2296],[150,37,1,2297,"attrName"],[150,45,1,2296],[150,46,1,2271],[151,0,1,2271],[151,5,1,2239],[151,7,1,2308,"reduce"],[151,13,1,2239],[151,14,1,2315],[151,24,1,2316,"acc"],[151,27,1,2315],[151,29,1,2320,"key"],[151,32,1,2315],[152,0,1,2315],[152,13,1,2327,"acc"],[152,16,1,2330],[152,17,1,2331,"key"],[152,20,1,2330],[152,21,1,2327],[152,24,1,2336],[153,0,1,2337,"value"],[153,8,1,2337,"value"],[153,13,1,2342],[153,15,1,2343,"obj"],[153,18,1,2346],[153,19,1,2347,"key"],[153,22,1,2346],[154,0,1,2336],[154,7,1,2327],[154,9,1,2353],[154,19,1,2362,"obj"],[154,22,1,2353],[154,24,1,2366,"attr"],[154,28,1,2353],[154,30,1,2371],[155,0,1,2372],[155,15,1,2379,"obj"],[155,18,1,2382],[155,19,1,2383,"$readonlyAttrs"],[155,33,1,2379],[155,34,1,2398,"includes"],[155,42,1,2379],[155,43,1,2407,"attr"],[155,47,1,2379],[155,48,1,2372],[156,0,1,2413],[156,7,1,2353],[156,8,1,2414,"obj"],[156,11,1,2353],[156,13,1,2418,"key"],[156,16,1,2353],[156,22,1,2425,"acc"],[156,25,1,2428],[156,26,1,2429,"key"],[156,29,1,2428],[156,30,1,2425],[156,31,1,2434,"readonly"],[156,39,1,2425],[156,42,1,2443],[156,43,1,2444],[156,44,1,2353],[156,45,1,2327],[156,47,1,2447,"acc"],[156,50,1,2315],[157,0,1,2315],[157,5,1,2239],[157,7,1,2452],[157,9,1,2239],[157,10,1,2222],[158,0,1,2456],[158,11,1,2462],[159,0,1,2463,"guid"],[159,6,1,2463,"guid"],[159,10,1,2467],[159,12,1,2468,"obj"],[159,15,1,2471],[159,16,1,2472,"guid"],[159,20,1,2462],[160,0,1,2477,"objectType"],[160,6,1,2477,"objectType"],[160,16,1,2487],[160,18,1,2488,"obj"],[160,21,1,2491],[160,22,1,2492,"$objectType"],[160,33,1,2462],[161,0,1,2504,"attributes"],[161,6,1,2504,"attributes"],[161,16,1,2514],[161,18,1,2515,"attributes"],[162,0,1,2462],[162,5,1,2456],[163,0,1,2527],[165,0,1,2527],[165,11,1,2536,"jsonToObject"],[165,23,1,2527],[165,24,1,2549,"jsonData"],[165,32,1,2527],[165,34,1,2558],[166,0,1,2559],[166,8,1,2565,"dbObj"],[166,13,1,2570],[166,16,1,2571],[167,0,1,2572,"guid"],[167,6,1,2572,"guid"],[167,10,1,2576],[167,12,1,2577,"jsonData"],[167,20,1,2585],[167,21,1,2586,"guid"],[167,25,1,2571],[168,0,1,2591,"$objectType"],[168,6,1,2591,"$objectType"],[168,17,1,2602],[168,19,1,2603,"jsonData"],[168,27,1,2611],[168,28,1,2612,"objectType"],[168,38,1,2571],[169,0,1,2623,"$readonlyAttrs"],[169,6,1,2623,"$readonlyAttrs"],[169,20,1,2637],[169,22,1,2638],[170,0,1,2571],[170,5,1,2559],[172,0,1,2642],[172,9,1,2646],[172,13,1,2652,"key"],[172,16,1,2642],[172,20,1,2659,"jsonData"],[172,28,1,2667],[172,29,1,2668,"attributes"],[172,39,1,2642],[173,0,1,2679,"dbObj"],[173,6,1,2679,"dbObj"],[173,11,1,2684],[173,12,1,2685,"key"],[173,15,1,2684],[173,16,1,2679],[173,19,1,2690,"jsonData"],[173,27,1,2698],[173,28,1,2699,"attributes"],[173,38,1,2690],[173,39,1,2710,"key"],[173,42,1,2690],[173,44,1,2715,"value"],[173,49,1,2679],[173,51,1,2721,"jsonData"],[173,59,1,2729],[173,60,1,2730,"attributes"],[173,70,1,2721],[173,71,1,2741,"key"],[173,74,1,2721],[173,76,1,2746,"readonly"],[173,84,1,2721],[173,88,1,2756,"dbObj"],[173,93,1,2761],[173,94,1,2762,"$readonlyAttrs"],[173,108,1,2756],[173,109,1,2777,"push"],[173,113,1,2756],[173,114,1,2782,"key"],[173,117,1,2756],[173,118,1,2679],[174,0,1,2642],[176,0,1,2787],[176,11,1,2794,"dbObj"],[176,16,1,2787],[177,0,1,2800],[179,6,1,2806,"ConnectionError"],[179,21],[182,0,1,2836],[182,29,1,2848,"message"],[182,36,1,2836],[182,38,1,2856],[183,0,1,2856],[185,0,1,2856],[186,0,1,2857],[186,119,1,2863,"message"],[186,126,1,2857],[186,130,1,2872,"Object"],[186,136,1,2878],[186,137,1,2879,"setPrototypeOf"],[186,151,1,2872],[186,197,1,2899,"ConnectionError"],[186,212,1,2914],[186,213,1,2915,"prototype"],[186,222,1,2872],[186,223,1,2857],[187,0,1,2856],[188,0,1,2926],[191,35,1,2830,"Error"],[191,40],[194,0,1,2927],[194,6,1,2933,"middlewares"],[194,17,1,2944],[194,20,1,2945],[194,22,1,2927],[196,0,1,2948],[196,11,1,2957,"registerMiddleware"],[196,29,1,2948],[196,30,1,2976,"middleware"],[196,40,1,2948],[196,42,1,2987],[197,0,1,2988,"middlewares"],[197,4,1,2988,"middlewares"],[197,15,1,2999],[197,16,1,3000,"push"],[197,20,1,2988],[197,21,1,3005,"middleware"],[197,31,1,2988],[198,0,1,3017],[200,0,1,3017],[200,11,1,3032,"applyMiddleware"],[200,26,1,3017],[200,27,1,3048,"request"],[200,34,1,3017],[200,36,1,3056,"actual"],[200,42,1,3017],[201,0,1,3017],[202,0,1,3017],[203,0,1,3017],[204,0,1,3017],[205,0,1,3017],[205,46,1,3071],[205,55,1,3086,"doProcess"],[205,64,1,3071],[205,65,1,3096,"index"],[205,70,1,3071],[205,72,1,3102,"req"],[205,75,1,3071],[206,0,1,3071],[207,0,1,3071],[208,0,1,3071],[209,0,1,3071],[210,0,1,3071],[210,28,1,3110,"index"],[210,33,1,3115],[210,38,1,3118,"middlewares"],[210,49,1,3129],[210,50,1,3130,"length"],[210,56,1,3071],[211,0,1,3071],[212,0,1,3071],[213,0,1,3071],[215,0,1,3071],[215,55,1,3144,"actual"],[215,61,1,3150],[215,62,1,3151,"req"],[215,65,1,3150],[215,66,1,3071],[217,0,1,3071],[218,0,1,3071],[218,55,1,3163,"middlewares"],[218,66,1,3174],[218,67,1,3175,"index"],[218,72,1,3174],[218,73,1,3163],[218,74,1,3182,"req"],[218,77,1,3163],[218,79,1,3186],[218,89,1,3186,"r"],[218,90,1,3187],[219,0,1,3187],[219,31,1,3189,"doProcess"],[219,40,1,3198],[219,41,1,3199,"index"],[219,46,1,3204],[219,49,1,3205],[219,50,1,3198],[219,52,1,3207,"r"],[219,53,1,3198],[219,54,1,3187],[220,0,1,3187],[220,23,1,3163],[220,24,1,3071],[222,0,1,3071],[223,0,1,3071],[224,0,1,3071],[225,0,1,3071],[226,0,1,3071],[227,0,1,3071],[228,0,1,3071],[228,14,1,3212],[228,15,1,3071],[228,17,1,3214,"request"],[228,24,1,3071],[228,25,1,3017],[230,0,1,3017],[231,0,1,3017],[232,0,1,3017],[233,0,1,3017],[234,0,1,3017],[235,0,1,3017],[236,0,1,3017],[238,6,1,3229,"ServerError"],[238,17],[241,0,1,3255],[241,25,1,3267,"status"],[241,31,1,3255],[241,33,1,3274,"message"],[241,40,1,3255],[241,42,1,3282],[242,0,1,3282],[244,0,1,3282],[245,0,1,3283],[245,116,1,3289,"message"],[245,123,1,3283],[245,127,1,3298],[245,134,1,3303,"status"],[245,140,1,3298],[245,143,1,3310,"status"],[245,149,1,3283],[245,151,1,3317,"Object"],[245,157,1,3323],[245,158,1,3324,"setPrototypeOf"],[245,172,1,3317],[245,219,1,3344,"ServerError"],[245,230,1,3355],[245,231,1,3356,"prototype"],[245,240,1,3317],[245,241,1,3283],[246,0,1,3282],[247,0,1,3367],[250,35,1,3249,"Error"],[250,40],[254,6,1,3374,"UnauthorizedError"],[254,23],[257,0,1,3412],[257,31,1,3424,"status"],[257,37,1,3412],[257,39,1,3431],[258,0,1,3431],[260,0,1,3431],[261,0,1,3432],[261,122,1,3438,"status"],[261,128,1,3432],[261,132,1,3446,"Object"],[261,138,1,3452],[261,139,1,3453,"setPrototypeOf"],[261,153,1,3446],[261,200,1,3473,"UnauthorizedError"],[261,217,1,3490],[261,218,1,3491,"prototype"],[261,227,1,3446],[261,228,1,3432],[262,0,1,3431],[263,0,1,3502],[266,4,1,3400,"ServerError"],[266,15],[270,0,1,3503],[270,11,1,3518,"post"],[270,15,1,3503],[270,16,1,3523,"url"],[270,19,1,3503],[270,21,1,3527,"data"],[270,25,1,3503],[271,0,1,3503],[272,0,1,3503],[273,0,1,3503],[274,0,1,3503],[275,0,1,3503],[276,0,1,3539,"request"],[276,12,1,3539,"request"],[276,19,1,3503],[276,22,1,3547],[277,0,1,3548,"url"],[277,14,1,3548,"url"],[277,17,1,3551],[277,19,1,3552,"url"],[277,22,1,3547],[278,0,1,3556,"body"],[278,14,1,3556,"body"],[278,18,1,3560],[278,20,1,3561,"data"],[278,24,1,3547],[279,0,1,3566,"init"],[279,14,1,3566,"init"],[279,18,1,3570],[279,20,1,3571],[280,0,1,3572,"method"],[280,16,1,3572,"method"],[280,22,1,3578],[280,24,1,3579],[280,30,1,3571],[281,0,1,3586,"headers"],[281,16,1,3586,"headers"],[281,23,1,3593],[281,25,1,3594],[281,29,1,3598,"Headers"],[281,36,1,3594],[281,37,1,3606],[281,60,1,3620],[282,0,1,3621,"Accept"],[282,18,1,3621,"Accept"],[282,24,1,3627],[282,26,1,3628],[283,0,1,3620],[283,17,1,3606],[283,19,1,3648],[283,36,1,3655,"data"],[283,40,1,3648],[283,44,1,3661],[284,0,1,3662],[284,34,1,3677],[285,0,1,3661],[285,17,1,3648],[285,20,1,3697],[285,22,1,3606],[285,23,1,3594],[285,24,1,3571],[286,0,1,3702,"redirect"],[286,16,1,3702,"redirect"],[286,24,1,3710],[286,26,1,3711],[286,33,1,3571],[287,0,1,3719,"credentials"],[287,16,1,3719,"credentials"],[287,27,1,3730],[287,29,1,3731],[288,0,1,3571],[289,0,1,3547],[289,13,1,3503],[290,0,1,3503],[291,0,1,3503],[291,46,1,3756,"applyMiddleware"],[291,61,1,3771],[291,62,1,3772,"request"],[291,69,1,3771],[291,71,1,3780,"doFetch"],[291,78,1,3771],[291,79,1,3503],[293,0,1,3503],[294,0,1,3503],[294,61,1,3790,"json"],[294,65,1,3503],[296,0,1,3503],[297,0,1,3503],[298,0,1,3503],[299,0,1,3503],[300,0,1,3503],[301,0,1,3503],[302,0,1,3503],[304,0,1,3797],[304,11,1,3812,"doFetch"],[304,18,1,3797],[304,19,1,3820,"request"],[304,26,1,3797],[305,0,1,3797],[306,0,1,3797],[307,0,1,3797],[308,0,1,3797],[309,0,1,3797],[310,0,1,3797],[310,17,1,3832,"request"],[310,24,1,3839],[310,25,1,3840,"init"],[310,29,1,3832],[310,30,1,3845,"body"],[310,34,1,3797],[311,0,1,3797],[312,0,1,3797],[313,0,1,3797],[315,0,1,3797],[315,18,1,3856],[315,22,1,3860,"AssertionError"],[315,27,1,3856],[315,29,1,3797],[317,0,1,3797],[318,0,1,3888,"request"],[318,12,1,3888,"request"],[318,19,1,3895],[318,20,1,3896,"init"],[318,24,1,3888],[318,25,1,3901,"body"],[318,29,1,3888],[318,32,1,3906],[318,49,1,3913,"request"],[318,56,1,3920],[318,57,1,3921,"body"],[318,61,1,3906],[318,65,1,3927,"JSON"],[318,69,1,3931],[318,70,1,3932,"stringify"],[318,79,1,3927],[318,80,1,3942,"request"],[318,87,1,3949],[318,88,1,3950,"body"],[318,92,1,3927],[318,93,1,3906],[318,96,1,3956,"request"],[318,103,1,3963],[318,104,1,3964,"body"],[318,108,1,3888],[319,0,1,3797],[320,0,1,3797],[321,0,1,3797],[321,46,1,3988,"window"],[321,52,1,3994],[321,53,1,3995,"fetch"],[321,58,1,3988],[321,59,1,4001,"request"],[321,66,1,4008],[321,67,1,4009,"url"],[321,70,1,3988],[321,72,1,4013,"request"],[321,79,1,4020],[321,80,1,4021,"init"],[321,84,1,3988],[321,85,1,3797],[323,0,1,3797],[324,0,1,3973,"response"],[324,12,1,3973,"response"],[324,20,1,3797],[325,0,1,3797],[326,0,1,3797],[328,0,1,3797],[329,0,1,3797],[330,0,1,3797],[331,0,1,3797],[331,18,1,4042],[331,22,1,4046,"ConnectionError"],[331,37,1,4042],[331,38,1,4062],[331,51,1,4064,"message"],[331,58,1,4042],[331,59,1,3797],[333,0,1,3797],[334,0,1,3797],[334,27,1,4080,"response"],[334,35,1,4088],[334,36,1,4089,"status"],[334,42,1,3797],[335,0,1,3797],[335,46,1,4102],[335,49,1,3797],[335,74,1,4127],[335,77,1,3797],[335,102,1,4136],[335,105,1,3797],[335,130,1,4145],[335,133,1,3797],[335,158,1,4154],[335,161,1,3797],[335,186,1,4163],[335,189,1,3797],[335,214,1,4217],[335,217,1,3797],[335,242,1,4226],[335,245,1,3797],[335,270,1,4294],[335,273,1,3797],[335,298,1,4352],[335,301,1,3797],[335,326,1,4507],[335,331,1,3797],[336,0,1,3797],[338,0,1,3797],[339,0,1,3797],[339,46,1,4113,"response"],[339,54,1,3797],[341,0,1,3797],[342,0,1,3797],[342,18,1,4173],[342,22,1,4177,"UnauthorizedError"],[342,39,1,4173],[342,40,1,4195,"response"],[342,48,1,4203],[342,49,1,4204,"status"],[342,55,1,4173],[342,56,1,3797],[344,0,1,3797],[345,0,1,3797],[345,18,1,4236],[345,22,1,4240,"ServerError"],[345,33,1,4236],[345,34,1,4252,"response"],[345,42,1,4260],[345,43,1,4261,"status"],[345,49,1,4236],[345,51,1,4268,"response"],[345,59,1,4276],[345,60,1,4277,"statusText"],[345,70,1,4236],[345,71,1,3797],[347,0,1,3797],[348,0,1,3797],[348,27,1,4308,"ValidationError"],[348,38,1,3797],[349,0,1,3797],[350,0,1,3797],[350,46,1,4330,"response"],[350,54,1,4338],[350,55,1,4339,"json"],[350,59,1,4330],[350,61,1,3797],[352,0,1,3797],[353,0,1,3797],[354,0,1,3797],[356,0,1,3797],[357,0,1,3797],[358,0,1,3797],[358,46,1,4380,"getXasErrorDescription"],[358,68,1,4402],[358,69,1,4403,"response"],[358,77,1,4402],[358,78,1,3797],[360,0,1,3797],[361,0,1,4362,"description"],[361,12,1,4362,"description"],[361,23,1,3797],[362,0,1,3797],[362,18,1,4419,"description"],[362,29,1,4430],[362,32,1,4431],[362,36,1,4435,"DescribedServerError"],[362,42,1,4431],[362,43,1,4456,"description"],[362,54,1,4431],[362,55,1,4430],[362,58,1,4469],[362,62,1,4473,"ServerError"],[362,73,1,4469],[362,74,1,4485,"response"],[362,82,1,4493],[362,83,1,4494,"status"],[362,89,1,4469],[362,90,1,3797],[364,0,1,3797],[365,0,1,3797],[365,18,1,4519],[365,22,1,4523,"ConnectionError"],[365,37,1,4519],[365,38,1,4539],[365,53,1,4519],[365,54,1,3797],[367,0,1,3797],[368,0,1,3797],[368,27,1,4574,"ServerError"],[368,38,1,3797],[369,0,1,3797],[369,27,1,4586,"response"],[369,35,1,4594],[369,36,1,4595,"status"],[369,42,1,3797],[370,0,1,3797],[371,0,1,3797],[371,46,1,4608,"getXasErrorDescription"],[371,68,1,4630],[371,69,1,4631,"response"],[371,77,1,4630],[371,78,1,3797],[373,0,1,3797],[374,0,1,3797],[375,0,1,3797],[377,0,1,3797],[378,0,1,3797],[379,0,1,3797],[380,0,1,3797],[381,0,1,3797],[382,0,1,3797],[383,0,1,3797],[385,0,1,4643],[385,11,1,4658,"getXasErrorDescription"],[385,33,1,4643],[385,34,1,4681,"response"],[385,42,1,4643],[386,0,1,4643],[387,0,1,4643],[388,0,1,4643],[389,0,1,4643],[390,0,1,4643],[391,0,1,4643],[392,0,1,4643],[392,46,1,4708,"response"],[392,54,1,4716],[392,55,1,4717,"json"],[392,59,1,4708],[392,61,1,4643],[394,0,1,4643],[395,0,1,4697,"json"],[395,12,1,4697,"json"],[395,16,1,4643],[396,0,1,4643],[396,46,1,4731,"json"],[396,50,1,4735],[396,54,1,4737],[396,71,1,4753,"json"],[396,75,1,4731],[396,78,1,4758,"json"],[396,82,1,4762],[396,83,1,4763,"description"],[396,94,1,4731],[396,97,1,4775],[396,102,1,4780],[396,103,1,4643],[398,0,1,4643],[399,0,1,4643],[400,0,1,4643],[401,0,1,4643],[402,0,1,4643],[403,0,1,4643],[404,0,1,4643],[406,0,1,4782,"FormData"],[406,2,1,4782,"FormData"],[406,10,1,4790],[406,11,1,4791,"prototype"],[406,20,1,4782],[406,21,1,4801,"append"],[406,27,1,4782],[406,30,1,4808],[406,40,1,4817,"key"],[406,43,1,4808],[406,45,1,4821,"value"],[406,50,1,4808],[406,52,1,4827,"name"],[406,56,1,4808],[406,58,1,4832],[407,0,1,4833],[407,15,1,4842,"key"],[407,18,1,4833],[407,22,1,4847,"value"],[407,27,1,4852],[407,28,1,4853,"nativePayload"],[407,41,1,4833],[407,46,1,4869,"value"],[407,51,1,4874],[407,54,1,4875,"value"],[407,59,1,4880],[407,60,1,4881,"nativePayload"],[407,73,1,4869],[407,75,1,4895,"name"],[407,79,1,4899],[407,84,1,4902,"value"],[407,89,1,4907],[407,90,1,4908,"name"],[407,94,1,4902],[407,97,1,4913,"name"],[407,101,1,4899],[407,102,1,4833],[407,105,1,4920],[407,110,1,4925,"_parts"],[407,116,1,4920],[407,117,1,4932,"push"],[407,121,1,4920],[407,122,1,4937],[407,123,1,4938,"key"],[407,126,1,4937],[407,128,1,4942,"value"],[407,133,1,4937],[407,134,1,4920],[407,135,1,4833],[408,0,1,4950],[408,3,1,4782],[410,6,1,4957,"NativeFileBackend"],[410,23],[411,0,1,4975],[411,31,1,4987,"rootDirectory"],[411,44,1,4975],[411,46,1,5001],[412,0,1,5001],[413,0,1,5002],[413,11,1,5007,"rootDirectory"],[413,24,1,5002],[413,27,1,5021,"rootDirectory"],[413,40,1,5002],[414,0,1,5035],[418,30,1,5049,"dirPath"],[418,37],[423,50,1,5065,"NativeModules"],[423,77,1,5079,"NativeFsModule"],[423,91,1,5065],[423,92,1,5094,"list"],[423,96,1,5065],[423,97,1,5099,"relativeToAbsolutePath"],[423,119,1,5121],[423,120,1,5122,"dirPath"],[423,127,1,5121],[423,128,1,5065],[423,129],[434,32,1,5148,"dirPath"],[434,39],[439,50,1,5164,"NativeModules"],[439,77,1,5178,"NativeFsModule"],[439,91,1,5164],[439,92,1,5193,"remove"],[439,98,1,5164],[439,99,1,5200,"relativeToAbsolutePath"],[439,121,1,5222],[439,122,1,5223,"dirPath"],[439,129,1,5222],[439,130,1,5164],[439,131],[450,31,1,5248,"filePath"],[450,39],[456,0,1,5264,"blob"],[456,16,1,5264,"blob"],[456,20],[456,23,1,5269],[456,27,1,5273,"Blob"],[456,31,1,5269],[456,33],[457,51,1,5285,"blob"],[457,55,1,5289],[457,56,1,5290,"nativePayload"],[457,69,1,5285],[457,72,1,5304],[458,0,1,5305,"uri"],[458,18,1,5305,"uri"],[458,21,1,5308],[458,35,1,5319,"relativeToAbsolutePath"],[458,57,1,5341],[458,58,1,5342,"filePath"],[458,66,1,5341],[458,67,1,5304],[459,0,1,5354,"name"],[459,18,1,5354,"name"],[459,22,1,5358],[459,24,1,5359,"filePath"],[459,32,1,5367],[459,33,1,5368,"substring"],[459,42,1,5359],[459,43,1,5378,"filePath"],[459,51,1,5386],[459,52,1,5387,"lastIndexOf"],[459,63,1,5378],[459,64,1,5399],[459,67,1,5378],[459,71,1,5404],[459,72,1,5359],[459,73,1,5304],[460,0,1,5407,"type"],[460,18,1,5407,"type"],[460,22,1,5411],[460,24,1,5412],[461,0,1,5304],[461,17,1,5285],[461,19,1,5419,"blob"],[461,23],[472,32,1,5440,"blob"],[472,36],[472,38,1,5445,"filePath"],[472,46],[478,50,1,5461,"NativeModules"],[478,77,1,5475,"NativeFsModule"],[478,91,1,5461],[478,92,1,5490,"save"],[478,96,1,5461],[478,97,1,5495,"blob"],[478,101,1,5499],[478,102,1,5500,"data"],[478,106,1,5461],[478,108,1,5505,"relativeToAbsolutePath"],[478,130,1,5527],[478,131,1,5528,"filePath"],[478,139,1,5527],[478,140,1,5461],[478,141],[481,0,1,5539,"blob"],[481,16,1,5539,"blob"],[481,20,1,5543],[481,21,1,5544,"close"],[481,26,1,5539],[481,28],[492,31,1,5567,"filePath"],[492,39],[492,41,1,5576,"newPath"],[492,48],[497,51,1,5592,"NativeModules"],[497,78,1,5606,"NativeFsModule"],[497,92,1,5592],[497,93,1,5621,"move"],[497,97,1,5592],[497,98,1,5626,"relativeToAbsolutePath"],[497,120,1,5648],[497,121,1,5649,"filePath"],[497,129,1,5648],[497,130,1,5592],[497,132,1,5659,"relativeToAbsolutePath"],[497,154,1,5681],[497,155,1,5682,"newPath"],[497,162,1,5681],[497,163,1,5592],[497,164],[508,33,1,5709,"filePath"],[508,41],[513,51,1,5726,"NativeModules"],[513,78,1,5740,"NativeFsModule"],[513,92,1,5726],[513,93,1,5755,"remove"],[513,99,1,5726],[513,100,1,5762,"relativeToAbsolutePath"],[513,122,1,5784],[513,123,1,5785,"filePath"],[513,131,1,5784],[513,132,1,5726],[513,133],[524,35,1,5815,"url"],[524,38],[524,40,1,5819,"filePath"],[524,48],[531,50,1,5846],[531,67,1,5861,"url"],[531,70,1,5846],[531,72,1,5865,"handleAs"],[531,80,1,5846],[532,0,1,5846],[533,0,1,5846],[534,0,1,5846],[535,0,1,5846],[536,0,1,5846],[537,0,1,5881,"request"],[537,26,1,5881,"request"],[537,33,1,5846],[537,36,1,5889],[538,0,1,5890,"url"],[538,28,1,5890,"url"],[538,31,1,5893],[538,33,1,5894,"url"],[538,36,1,5889],[539,0,1,5898,"init"],[539,28,1,5898,"init"],[539,32,1,5902],[539,34,1,5903],[540,0,1,5904,"method"],[540,30,1,5904,"method"],[540,36,1,5910],[540,38,1,5911],[540,43,1,5903],[541,0,1,5917,"headers"],[541,30,1,5917,"headers"],[541,37,1,5924],[541,39,1,5925],[541,43,1,5929,"Headers"],[541,50,1,5925],[541,52,1,5903],[542,0,1,5937,"cache"],[542,30,1,5937,"cache"],[542,35,1,5942],[542,37,1,5943],[542,50,1,5903],[543,0,1,5957,"credentials"],[543,30,1,5957,"credentials"],[543,41,1,5968],[543,43,1,5969],[544,0,1,5903],[545,0,1,5889],[545,27,1,5846],[546,0,1,5846],[547,0,1,5846],[547,60,1,5996,"applyMiddleware"],[547,75,1,6011],[547,76,1,6012,"request"],[547,83,1,6011],[547,85,1,6020,"doFetch"],[547,92,1,6011],[547,93,1,5846],[549,0,1,5846],[550,0,1,5981,"response"],[550,26,1,5981,"response"],[550,34,1,5846],[552,0,1,5846],[552,30,1,6033,"response"],[552,38,1,6041],[552,39,1,6042,"ok"],[552,41,1,5846],[553,0,1,5846],[554,0,1,5846],[555,0,1,5846],[557,0,1,5846],[557,32,1,6051],[557,36,1,6055,"ServerError"],[557,47,1,6051],[557,48,1,6067,"response"],[557,56,1,6075],[557,57,1,6076,"status"],[557,63,1,6051],[557,65,1,6083,"response"],[557,73,1,6091],[557,74,1,6092,"statusText"],[557,84,1,6051],[557,85,1,5846],[559,0,1,5846],[560,0,1,5846],[560,42,1,6111,"handleAs"],[560,50,1,5846],[561,0,1,5846],[561,62,1,6125],[561,68,1,5846],[561,93,1,6159],[561,99,1,5846],[561,125,1,6193],[561,131,1,5846],[562,0,1,5846],[564,0,1,5846],[565,0,1,5846],[565,61,1,6139,"response"],[565,69,1,6147],[565,70,1,6148,"text"],[565,74,1,6139],[565,76,1,5846],[567,0,1,5846],[568,0,1,5846],[568,61,1,6173,"response"],[568,69,1,6181],[568,70,1,6182,"json"],[568,74,1,6173],[568,76,1,5846],[570,0,1,5846],[571,0,1,5846],[571,61,1,6207,"response"],[571,69,1,6215],[571,70,1,6216,"blob"],[571,74,1,6207],[571,76,1,5846],[573,0,1,5846],[574,0,1,5846],[575,0,1,5846],[576,0,1,5846],[577,0,1,5846],[578,0,1,5846],[579,0,1,5846],[579,18,1,6225,"url"],[579,21,1,5846],[579,23,1,6229],[579,29,1,5846],[579,30],[582,0,1,5835,"blob"],[582,16,1,5835,"blob"],[582,20],[584,50,1,6243,"NativeModules"],[584,77,1,6257,"NativeFsModule"],[584,91,1,6243],[584,92,1,6272,"save"],[584,96,1,6243],[584,97,1,6277,"blob"],[584,101,1,6281],[584,102,1,6282,"data"],[584,106,1,6243],[584,108,1,6287,"relativeToAbsolutePath"],[584,130,1,6309],[584,131,1,6310,"filePath"],[584,139,1,6309],[584,140,1,6243],[584,141],[587,0,1,6321,"blob"],[587,16,1,6321,"blob"],[587,20,1,6325],[587,21,1,6326,"close"],[587,26,1,6321],[587,28],[598,37,1,6349,"path"],[598,41],[598,43,1,6354],[599,0,1,6355],[599,15,1,6362],[599,25,1,6371,"rootDirectory"],[599,38,1,6362],[599,40,1,6385,"path"],[599,44,1,6362],[599,46,1,6390],[600,0,1,6391],[600,17,1,6398,"rootDirectory"],[600,30,1,6411],[600,33,1,6412],[600,36,1,6398],[600,39,1,6416,"path"],[600,43,1,6391],[601,0,1,6421],[601,9,1,6362],[601,10,1,6422],[601,15,1,6427,"rootDirectory"],[601,28,1,6362],[601,30,1,6441,"path"],[601,34,1,6362],[601,35,1,6355],[602,0,1,6447],[605,36,1,6474,"filePath"],[605,44],[610,51,1,6491,"NativeModules"],[610,78,1,6505,"NativeFsModule"],[610,92,1,6491],[610,93,1,6520,"readAsDataURL"],[610,106,1,6491],[610,107,1,6534,"relativeToAbsolutePath"],[610,129,1,6556],[610,130,1,6557,"filePath"],[610,138,1,6556],[610,139,1,6491],[610,140],[625,0,1,6569],[625,11,1,6578,"relativeToAbsolutePath"],[625,33,1,6569],[625,34,1,6601,"path"],[625,38,1,6569],[625,40,1,6606],[626,0,1,6607],[626,8,1,6613,"DocumentDirectoryPath"],[626,29,1,6634],[626,32,1,6635,"NativeModules"],[626,59,1,6649,"NativeFsModule"],[626,73,1,6635],[626,74,1,6664,"DocumentDirectoryPath"],[626,95,1,6607],[627,0,1,6686],[627,11,1,6693,"path"],[627,15,1,6697],[627,16,1,6698,"includes"],[627,24,1,6693],[627,25,1,6707,"DocumentDirectoryPath"],[627,46,1,6693],[627,50,1,6730,"path"],[627,54,1,6693],[627,57,1,6735],[627,58,1,6736,"DocumentDirectoryPath"],[627,79,1,6735],[627,81,1,6758,"path"],[627,85,1,6735],[627,87,1,6764,"join"],[627,91,1,6735],[627,92,1,6769],[627,95,1,6735],[627,96,1,6686],[628,0,1,6774],[630,0,1,6774],[630,6,1,6778,"OptionalFastImage"],[630,23,1,6774],[632,0,1,6796],[632,11,1,6805,"Image"],[632,16,1,6796],[632,23,1,6865],[633,0,1,6865],[633,8,1,6819,"testID"],[633,14,1,6865],[633,22,1,6812,"testID"],[633,28,1,6865],[634,0,1,6865],[634,8,1,6833,"source"],[634,14,1,6865],[634,22,1,6826,"source"],[634,28,1,6865],[635,0,1,6865],[635,8,1,6846,"style"],[635,13,1,6865],[635,21,1,6840,"style"],[635,26,1,6865],[636,0,1,6865],[636,8,1,6858,"color"],[636,13,1,6865],[636,21,1,6852,"color"],[636,26,1,6865],[638,0,1,6866],[638,12,1,6873],[638,19,1,6880,"source"],[638,25,1,6866],[639,0,1,6888],[639,11,1,6892],[639,22,1,6888],[640,0,1,6904],[640,15,1,6911],[640,19,1,6904],[642,0,1,6916],[642,11,1,6920],[642,19,1,6916],[643,0,1,6929],[643,12,1,6935,"dimensions"],[643,22,1,6945],[643,25,1,6946],[643,45,1,6954],[644,0,1,6954],[644,17,1,6958,"calculateSvgDimensions"],[644,39,1,6980],[644,40,1,6981,"source"],[644,46,1,6980],[644,47,1,6954],[645,0,1,6954],[645,9,1,6946],[645,11,1,6989],[645,12,1,6990,"source"],[645,18,1,6989],[645,19,1,6946],[645,20,1,6929],[646,0,1,6999],[646,15,1,7006],[646,41,1,7020,"SvgXml"],[646,63,1,7006],[646,65,1,7027],[646,88,1,7041],[647,0,1,7042,"xml"],[647,10,1,7042,"xml"],[647,13,1,7045],[647,15,1,7046,"source"],[647,21,1,7041],[648,0,1,7053,"style"],[648,10,1,7053,"style"],[648,15,1,7058],[648,17,1,7059,"StyleSheet"],[648,41,1,7070,"flatten"],[648,48,1,7059],[648,49,1,7078],[648,50,1,7079],[649,0,1,7080,"width"],[649,12,1,7080,"width"],[649,17,1,7085],[649,19,1,7086,"dimensions"],[649,29,1,7096],[649,30,1,7097,"width"],[649,35,1,7079],[650,0,1,7103,"height"],[650,12,1,7103,"height"],[650,18,1,7109],[650,20,1,7110,"dimensions"],[650,30,1,7120],[650,31,1,7121,"height"],[651,0,1,7079],[651,11,1,7078],[651,13,1,7129,"style"],[651,18,1,7078],[651,19,1,7059],[651,20,1,7041],[652,0,1,7137,"width"],[652,10,1,7137,"width"],[652,15,1,7142],[652,17,1,7143],[652,22,1,7148],[652,23,1,7041],[653,0,1,7150,"height"],[653,10,1,7150,"height"],[653,16,1,7156],[653,18,1,7157],[653,23,1,7162],[653,24,1,7041],[654,0,1,7164,"testID"],[654,10,1,7164,"testID"],[654,16,1,7170],[654,18,1,7171,"testID"],[655,0,1,7041],[655,9,1,7027],[655,11,1,7179],[655,16,1,7184],[655,17,1,7179],[655,22,1,7188,"color"],[655,27,1,7179],[655,30,1,7194],[656,0,1,7195,"fill"],[656,10,1,7195,"fill"],[656,14,1,7199],[656,16,1,7200,"color"],[656,21,1,7194],[657,0,1,7206,"color"],[657,10,1,7206,"color"],[657,15,1,7211],[657,17,1,7212,"color"],[658,0,1,7194],[658,9,1,7179],[658,12,1,7219],[659,0,1,7220,"color"],[659,10,1,7220,"color"],[659,15,1,7225],[659,17,1,7226],[660,0,1,7219],[660,9,1,7027],[660,10,1,7006],[660,11,1,6999],[662,0,1,7237],[663,0,1,7245],[663,12,1,7248],[663,17,1,7253],[663,18,1,7248],[663,23,1,7257,"OptionalFastImage"],[663,40,1,7245],[663,42,1,7275],[663,49,1,7282],[663,75,1,7296,"LegacyImage"],[663,86,1,7282],[663,88,1,7308],[664,0,1,7309,"source"],[664,10,1,7309,"source"],[664,16,1,7315],[664,18,1,7316,"source"],[664,24,1,7308],[665,0,1,7323,"style"],[665,10,1,7323,"style"],[665,15,1,7328],[665,17,1,7329,"style"],[665,22,1,7308],[666,0,1,7335,"testID"],[666,10,1,7335,"testID"],[666,16,1,7341],[666,18,1,7342,"testID"],[667,0,1,7308],[667,9,1,7282],[667,10,1,7275],[669,0,1,7357],[669,12,1,7357,"_a"],[669,14,1,7359],[669,17,1,7360,"StyleSheet"],[669,41,1,7371,"flatten"],[669,48,1,7360],[669,49,1,7379],[669,57,1,7385,"style"],[669,62,1,7379],[669,65,1,7391,"style"],[669,70,1,7379],[669,73,1,7397],[669,75,1,7360],[669,76,1,7357],[670,0,1,7357],[670,12,1,7413,"resizeMode"],[670,22,1,7357],[670,25,1,7425,"_a"],[670,27,1,7357],[670,28,1,7402,"resizeMode"],[670,38,1,7357],[671,0,1,7357],[671,12,1,7428,"styleRest"],[671,21,1,7357],[671,24,1,7438],[671,40,1,7445,"_a"],[671,42,1,7438],[671,44,1,7448],[671,45,1,7449],[671,57,1,7448],[671,58,1,7438],[671,59,1,7357],[672,0,1,7357],[672,36,1,7492,"Image$1"],[672,55,1,7500,"resolveAssetSource"],[672,73,1,7492],[672,74,1,7519,"source"],[672,80,1,7492],[672,81,1,7357],[673,0,1,7357],[673,12,1,7471,"width"],[673,17,1,7357],[673,42,1,7465,"width"],[673,47,1,7357],[674,0,1,7357],[674,12,1,7484,"height"],[674,18,1,7357],[674,43,1,7477,"height"],[674,49,1,7357],[676,0,1,7527],[676,12,1,7531,"realSource"],[676,22,1,7541],[676,25,1,7542,"source"],[676,31,1,7527],[677,0,1,7549],[677,15,1,7555],[677,27,1,7565],[677,34,1,7572,"source"],[677,40,1,7555],[677,44,1,7580],[677,56,1,7590],[677,63,1,7597,"source"],[677,69,1,7603],[677,70,1,7604,"uri"],[677,73,1,7555],[677,77,1,7609,"source"],[677,83,1,7615],[677,84,1,7616,"uri"],[677,87,1,7609],[677,88,1,7620,"startsWith"],[677,98,1,7609],[677,99,1,7631],[677,105,1,7609],[677,106,1,7555],[677,110,1,7640,"source"],[677,116,1,7646],[677,117,1,7647,"uri"],[677,120,1,7640],[677,121,1,7651,"startsWith"],[677,131,1,7640],[677,132,1,7662],[677,139,1,7640],[677,140,1,7555],[677,145,1,7673,"realSource"],[677,155,1,7683],[677,158,1,7684],[677,181,1,7698],[677,204,1,7712],[677,206,1,7698],[677,208,1,7715,"source"],[677,214,1,7698],[677,215,1,7684],[677,217,1,7723],[678,0,1,7724,"uri"],[678,10,1,7724,"uri"],[678,13,1,7727],[678,28,1,7739,"source"],[678,34,1,7745],[678,35,1,7746,"uri"],[679,0,1,7723],[679,9,1,7684],[679,10,1,7555],[679,13,1,7755],[679,39,1,7769,"OptionalFastImage"],[679,56,1,7755],[679,58,1,7787],[680,0,1,7788,"source"],[680,10,1,7788,"source"],[680,16,1,7794],[680,18,1,7795,"realSource"],[680,28,1,7787],[681,0,1,7806,"style"],[681,10,1,7806,"style"],[681,15,1,7811],[681,17,1,7812],[681,40,1,7826],[682,0,1,7827,"width"],[682,12,1,7827,"width"],[682,17,1,7832],[682,19,1,7833,"width"],[682,24,1,7826],[683,0,1,7839,"height"],[683,12,1,7839,"height"],[683,18,1,7845],[683,20,1,7846,"height"],[684,0,1,7826],[684,11,1,7812],[684,13,1,7854,"styleRest"],[684,22,1,7812],[684,23,1,7787],[685,0,1,7865,"resizeMode"],[685,10,1,7865,"resizeMode"],[685,20,1,7875],[685,22,1,7876,"resizeMode"],[686,0,1,7787],[686,9,1,7755],[686,10,1,7549],[687,0,1,6866],[688,0,1,7890],[690,0,1,7890],[690,11,1,7899,"LegacyImage"],[690,22,1,7890],[690,30,1,7953],[691,0,1,7953],[691,8,1,7919,"source"],[691,14,1,7953],[691,23,1,7912,"source"],[691,29,1,7953],[692,0,1,7953],[692,8,1,7932,"style"],[692,13,1,7953],[692,22,1,7926,"style"],[692,27,1,7953],[693,0,1,7953],[693,8,1,7945,"testID"],[693,14,1,7953],[693,23,1,7938,"testID"],[693,29,1,7953],[694,0,1,7954],[694,8,1,7957],[694,20,1,7967],[694,27,1,7974,"source"],[694,33,1,7954],[694,35,1,7981],[694,42,1,7988],[694,68,1,8002,"Image$1"],[694,86,1,7988],[694,88,1,8010],[695,0,1,8011,"source"],[695,6,1,8011,"source"],[695,12,1,8017],[695,14,1,8018,"source"],[695,20,1,8010],[696,0,1,8025,"style"],[696,6,1,8025,"style"],[696,11,1,8030],[696,13,1,8031,"style"],[696,18,1,8010],[697,0,1,8037,"fadeDuration"],[697,6,1,8037,"fadeDuration"],[697,18,1,8049],[697,20,1,8050],[697,21,1,8010],[698,0,1,8052,"testID"],[698,6,1,8052,"testID"],[698,12,1,8058],[698,14,1,8059,"testID"],[699,0,1,8010],[699,5,1,7988],[699,6,1,7981],[701,0,1,7953],[701,20,1,8100],[701,41,1,8109],[701,43,1,8100],[701,44,1,7953],[702,0,1,7953],[703,0,1,7953],[703,8,1,8074,"dataSource"],[703,18,1,7953],[704,0,1,7953],[704,8,1,8085,"setDataSource"],[704,21,1,7953],[706,0,1,8113],[706,11,1,8120],[706,33,1,8130],[706,45,1,8134],[707,0,1,8135],[707,11,1,8140],[707,12,1,8135],[707,17,1,8144,"source"],[707,23,1,8150],[707,24,1,8151,"uri"],[707,27,1,8135],[707,30,1,8155,"NativeFileBackend"],[707,47,1,8172],[707,48,1,8173,"readAsDataURL"],[707,61,1,8155],[707,62,1,8187,"source"],[707,68,1,8193],[707,69,1,8194,"uri"],[707,72,1,8155],[707,74,1,8199,"then"],[707,78,1,8155],[707,79,1,8204],[707,89,1,8204,"res"],[707,92,1,8207],[708,0,1,8207],[708,15,1,8209,"setDataSource"],[708,28,1,8222],[708,29,1,8223,"res"],[708,32,1,8222],[708,33,1,8207],[709,0,1,8207],[709,7,1,8155],[709,9,1,8229,"catch"],[709,14,1,8155],[709,15,1,8235],[709,25,1,8235,"e"],[709,26,1,8236],[709,28,1,8238],[710,0,1,8239,"setDataSource"],[710,8,1,8239,"setDataSource"],[710,21,1,8252],[710,22,1,8253],[710,24,1,8252],[710,25,1,8239],[710,27,1,8257,"mx"],[710,29,1,8259],[710,30,1,8260,"onError"],[710,37,1,8257],[710,38,1,8268,"e"],[710,39,1,8257],[710,40,1,8239],[711,0,1,8271],[711,7,1,8155],[711,8,1,8135],[711,11,1,8273,"setDataSource"],[711,24,1,8286],[711,25,1,8287],[711,27,1,8286],[711,28,1,8135],[712,0,1,8291],[712,5,1,8120],[712,7,1,8292],[712,8,1,8293,"source"],[712,14,1,8292],[712,15,1,8120],[712,18,1,8302],[712,24,1,8306,"dataSource"],[712,34,1,8316],[712,35,1,8317,"length"],[712,41,1,8302],[712,44,1,8324],[712,48,1,8302],[712,51,1,8329],[712,77,1,8343,"Image$1"],[712,95,1,8329],[712,97,1,8351],[713,0,1,8352,"source"],[713,6,1,8352,"source"],[713,12,1,8358],[713,14,1,8359],[714,0,1,8360,"uri"],[714,8,1,8360,"uri"],[714,11,1,8363],[714,13,1,8364,"dataSource"],[715,0,1,8359],[715,7,1,8351],[716,0,1,8376,"style"],[716,6,1,8376,"style"],[716,11,1,8381],[716,13,1,8382,"style"],[716,18,1,8351],[717,0,1,8388,"fadeDuration"],[717,6,1,8388,"fadeDuration"],[717,18,1,8400],[717,20,1,8401],[717,21,1,8351],[718,0,1,8403,"testID"],[718,6,1,8403,"testID"],[718,12,1,8409],[718,14,1,8410,"testID"],[719,0,1,8351],[719,5,1,8329],[719,6,1,8113],[720,0,1,8419],[722,0,1,8419],[722,10,1,8425,"NativeModules"],[722,37,1,8439,"FastImageView"],[722,50,1,8419],[722,55,1,8455,"OptionalFastImage"],[722,72,1,8472],[722,75,1,8473,"require"],[722,86,1,8480],[722,133,1,8473],[722,134,1,8508,"default"],[722,141,1,8419]]},"type":"js/module"}]}