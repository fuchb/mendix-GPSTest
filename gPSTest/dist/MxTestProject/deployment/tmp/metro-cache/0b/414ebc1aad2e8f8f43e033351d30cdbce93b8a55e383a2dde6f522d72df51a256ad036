{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"@react-navigation/native","data":{"isAsync":false}},{"name":"./TouchableItem","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[9], \"@react-navigation/core\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[10], \"@react-navigation/native\");\n\n  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./TouchableItem\"));\n\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\8.7.0.1476\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-navigation-drawer\\\\src\\\\views\\\\DrawerNavigatorItems.js\";\n\n  var DrawerNavigatorItems = function (_React$Component) {\n    (0, _inherits2.default)(DrawerNavigatorItems, _React$Component);\n\n    function DrawerNavigatorItems() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerNavigatorItems);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DrawerNavigatorItems)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this._getActiveTintColor = function () {\n        var activeTintColor = _this.props.activeTintColor;\n\n        if (!activeTintColor) {\n          return;\n        } else if (typeof activeTintColor === 'string') {\n          return activeTintColor;\n        }\n\n        return activeTintColor[_this.context];\n      };\n\n      _this._getInactiveTintColor = function () {\n        var inactiveTintColor = _this.props.inactiveTintColor;\n\n        if (!inactiveTintColor) {\n          return;\n        } else if (typeof inactiveTintColor === 'string') {\n          return inactiveTintColor;\n        }\n\n        return inactiveTintColor[_this.context];\n      };\n\n      _this._getActiveBackgroundColor = function () {\n        var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n        if (!activeBackgroundColor) {\n          return;\n        } else if (typeof activeBackgroundColor === 'string') {\n          return activeBackgroundColor;\n        }\n\n        return activeBackgroundColor[_this.context];\n      };\n\n      _this._getInactiveBackgroundColor = function () {\n        var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n        if (!inactiveBackgroundColor) {\n          return;\n        } else if (typeof inactiveBackgroundColor === 'string') {\n          return inactiveBackgroundColor;\n        }\n\n        return inactiveBackgroundColor[_this.context];\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerNavigatorItems, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            items = _this$props.items,\n            activeItemKey = _this$props.activeItemKey,\n            getLabel = _this$props.getLabel,\n            renderIcon = _this$props.renderIcon,\n            onItemPress = _this$props.onItemPress,\n            itemsContainerStyle = _this$props.itemsContainerStyle,\n            itemStyle = _this$props.itemStyle,\n            labelStyle = _this$props.labelStyle,\n            activeLabelStyle = _this$props.activeLabelStyle,\n            inactiveLabelStyle = _this$props.inactiveLabelStyle,\n            iconContainerStyle = _this$props.iconContainerStyle,\n            drawerPosition = _this$props.drawerPosition;\n\n        var activeTintColor = this._getActiveTintColor();\n\n        var inactiveTintColor = this._getInactiveTintColor();\n\n        var activeBackgroundColor = this._getActiveBackgroundColor();\n\n        var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.container, itemsContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, items.map(function (route, index) {\n          var _ref;\n\n          var focused = activeItemKey === route.key;\n          var color = focused ? activeTintColor : inactiveTintColor;\n          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n          var scene = {\n            route: route,\n            index: index,\n            focused: focused,\n            tintColor: color\n          };\n          var icon = renderIcon(scene);\n          var label = getLabel(scene);\n          var accessibilityLabel = typeof label === 'string' ? label : undefined;\n          var extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;\n          return _react.default.createElement(_TouchableItem.default, {\n            key: route.key,\n            accessible: true,\n            accessibilityLabel: accessibilityLabel,\n            onPress: function onPress() {\n              onItemPress({\n                route: route,\n                focused: focused\n              });\n            },\n            delayPressIn: 0,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            }\n          }, _react.default.createElement(_native.SafeAreaView, {\n            style: [{\n              backgroundColor: backgroundColor\n            }, styles.item, itemStyle],\n            forceInset: (_ref = {}, (0, _defineProperty2.default)(_ref, drawerPosition, 'always'), (0, _defineProperty2.default)(_ref, drawerPosition === 'left' ? 'right' : 'left', 'never'), (0, _defineProperty2.default)(_ref, \"vertical\", 'never'), _ref),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            }\n          }, icon ? _react.default.createElement(_reactNative.View, {\n            style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            }\n          }, icon) : null, typeof label === 'string' ? _react.default.createElement(_reactNative.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle, extraLabelStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            }\n          }, label) : label));\n        }));\n      }\n    }]);\n    return DrawerNavigatorItems;\n  }(_react.default.Component);\n\n  DrawerNavigatorItems.contextType = _core.ThemeContext;\n  DrawerNavigatorItems.defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff'\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)'\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)'\n    },\n    inactiveBackgroundColor: 'transparent'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      paddingVertical: 4\n    },\n    item: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    icon: {\n      marginHorizontal: 16,\n      width: 24,\n      alignItems: 'center'\n    },\n    inactiveIcon: {\n      opacity: 0.62\n    },\n    label: {\n      margin: 16,\n      fontWeight: 'bold'\n    }\n  });\n\n  var _default = DrawerNavigatorItems;\n  exports.default = _default;\n});","map":[[21,0,1,0],[23,0,2,0],[25,0,3,0],[27,0,4,0],[29,0,5,0],[33,6,10,6,"DrawerNavigatorItems"],[33,26],[49,12,13,2,"_getActiveTintColor"],[49,31],[49,34,13,24],[49,46,13,30],[50,0,13,30],[50,12,14,10,"activeTintColor"],[50,27,13,30],[50,30,14,30],[50,36,14,35,"props"],[50,41,13,30],[50,42,14,10,"activeTintColor"],[50,57,13,30],[52,0,15,4],[52,12,15,8],[52,13,15,9,"activeTintColor"],[52,28,15,4],[52,30,15,26],[53,0,16,6],[54,0,17,5],[54,9,15,4],[54,15,17,11],[54,19,17,15],[54,26,17,22,"activeTintColor"],[54,41,17,15],[54,46,17,42],[54,54,17,11],[54,56,17,52],[55,0,18,6],[55,17,18,13,"activeTintColor"],[55,32,18,6],[56,0,19,5],[58,0,21,4],[58,15,21,11,"activeTintColor"],[58,30,21,26],[58,31,21,27],[58,37,21,32,"context"],[58,44,21,26],[58,45,21,4],[59,0,22,3],[59,7],[61,12,24,2,"_getInactiveTintColor"],[61,33],[61,36,24,26],[61,48,24,32],[62,0,24,32],[62,12,25,10,"inactiveTintColor"],[62,29,24,32],[62,32,25,32],[62,38,25,37,"props"],[62,43,24,32],[62,44,25,10,"inactiveTintColor"],[62,61,24,32],[64,0,26,4],[64,12,26,8],[64,13,26,9,"inactiveTintColor"],[64,30,26,4],[64,32,26,28],[65,0,27,6],[66,0,28,5],[66,9,26,4],[66,15,28,11],[66,19,28,15],[66,26,28,22,"inactiveTintColor"],[66,43,28,15],[66,48,28,44],[66,56,28,11],[66,58,28,54],[67,0,29,6],[67,17,29,13,"inactiveTintColor"],[67,34,29,6],[68,0,30,5],[70,0,32,4],[70,15,32,11,"inactiveTintColor"],[70,32,32,28],[70,33,32,29],[70,39,32,34,"context"],[70,46,32,28],[70,47,32,4],[71,0,33,3],[71,7],[73,12,35,2,"_getActiveBackgroundColor"],[73,37],[73,40,35,30],[73,52,35,36],[74,0,35,36],[74,12,36,10,"activeBackgroundColor"],[74,33,35,36],[74,36,36,36],[74,42,36,41,"props"],[74,47,35,36],[74,48,36,10,"activeBackgroundColor"],[74,69,35,36],[76,0,37,4],[76,12,37,8],[76,13,37,9,"activeBackgroundColor"],[76,34,37,4],[76,36,37,32],[77,0,38,6],[78,0,39,5],[78,9,37,4],[78,15,39,11],[78,19,39,15],[78,26,39,22,"activeBackgroundColor"],[78,47,39,15],[78,52,39,48],[78,60,39,11],[78,62,39,58],[79,0,40,6],[79,17,40,13,"activeBackgroundColor"],[79,38,40,6],[80,0,41,5],[82,0,43,4],[82,15,43,11,"activeBackgroundColor"],[82,36,43,32],[82,37,43,33],[82,43,43,38,"context"],[82,50,43,32],[82,51,43,4],[83,0,44,3],[83,7],[85,12,46,2,"_getInactiveBackgroundColor"],[85,39],[85,42,46,32],[85,54,46,38],[86,0,46,38],[86,12,47,10,"inactiveBackgroundColor"],[86,35,46,38],[86,38,47,38],[86,44,47,43,"props"],[86,49,46,38],[86,50,47,10,"inactiveBackgroundColor"],[86,73,46,38],[88,0,48,4],[88,12,48,8],[88,13,48,9,"inactiveBackgroundColor"],[88,36,48,4],[88,38,48,34],[89,0,49,6],[90,0,50,5],[90,9,48,4],[90,15,50,11],[90,19,50,15],[90,26,50,22,"inactiveBackgroundColor"],[90,49,50,15],[90,54,50,50],[90,62,50,11],[90,64,50,60],[91,0,51,6],[91,17,51,13,"inactiveBackgroundColor"],[91,40,51,6],[92,0,52,5],[94,0,54,4],[94,15,54,11,"inactiveBackgroundColor"],[94,38,54,34],[94,39,54,35],[94,45,54,40,"context"],[94,52,54,34],[94,53,54,4],[95,0,55,3],[95,7],[102,31,57,11],[103,0,57,11],[103,26,71,8],[103,31,71,13,"props"],[103,36,57,11],[104,0,57,11],[104,12,59,6,"items"],[104,17,57,11],[104,32,59,6,"items"],[104,37,57,11],[105,0,57,11],[105,12,60,6,"activeItemKey"],[105,25,57,11],[105,40,60,6,"activeItemKey"],[105,53,57,11],[106,0,57,11],[106,12,61,6,"getLabel"],[106,20,57,11],[106,35,61,6,"getLabel"],[106,43,57,11],[107,0,57,11],[107,12,62,6,"renderIcon"],[107,22,57,11],[107,37,62,6,"renderIcon"],[107,47,57,11],[108,0,57,11],[108,12,63,6,"onItemPress"],[108,23,57,11],[108,38,63,6,"onItemPress"],[108,49,57,11],[109,0,57,11],[109,12,64,6,"itemsContainerStyle"],[109,31,57,11],[109,46,64,6,"itemsContainerStyle"],[109,65,57,11],[110,0,57,11],[110,12,65,6,"itemStyle"],[110,21,57,11],[110,36,65,6,"itemStyle"],[110,45,57,11],[111,0,57,11],[111,12,66,6,"labelStyle"],[111,22,57,11],[111,37,66,6,"labelStyle"],[111,47,57,11],[112,0,57,11],[112,12,67,6,"activeLabelStyle"],[112,28,57,11],[112,43,67,6,"activeLabelStyle"],[112,59,57,11],[113,0,57,11],[113,12,68,6,"inactiveLabelStyle"],[113,30,57,11],[113,45,68,6,"inactiveLabelStyle"],[113,63,57,11],[114,0,57,11],[114,12,69,6,"iconContainerStyle"],[114,30,57,11],[114,45,69,6,"iconContainerStyle"],[114,63,57,11],[115,0,57,11],[115,12,70,6,"drawerPosition"],[115,26,57,11],[115,41,70,6,"drawerPosition"],[115,55,57,11],[117,0,73,4],[117,12,73,10,"activeTintColor"],[117,27,73,25],[117,30,73,28],[117,35,73,33,"_getActiveTintColor"],[117,54,73,28],[117,56,73,4],[119,0,74,4],[119,12,74,10,"inactiveTintColor"],[119,29,74,27],[119,32,74,30],[119,37,74,35,"_getInactiveTintColor"],[119,58,74,30],[119,60,74,4],[121,0,75,4],[121,12,75,10,"activeBackgroundColor"],[121,33,75,31],[121,36,75,34],[121,41,75,39,"_getActiveBackgroundColor"],[121,66,75,34],[121,68,75,4],[123,0,76,4],[123,12,76,10,"inactiveBackgroundColor"],[123,35,76,33],[123,38,76,36],[123,43,76,41,"_getInactiveBackgroundColor"],[123,70,76,36],[123,72,76,4],[125,0,78,4],[125,15,79,6],[125,44,79,7],[125,61,79,6],[126,0,79,12],[126,10,79,12],[126,15,79,17],[126,17,79,19],[126,18,79,20,"styles"],[126,24,79,26],[126,25,79,27,"container"],[126,34,79,19],[126,36,79,38,"itemsContainerStyle"],[126,55,79,19],[126,56,79,6],[127,0,79,6],[128,0,79,6],[129,0,79,6],[130,0,79,6],[131,0,79,6],[131,11,80,9,"items"],[131,16,80,14],[131,17,80,15,"map"],[131,20,80,9],[131,21,80,19],[131,31,80,20,"route"],[131,36,80,19],[131,38,80,27,"index"],[131,43,80,19],[131,45,80,37],[132,0,80,37],[134,0,81,10],[134,14,81,16,"focused"],[134,21,81,23],[134,24,81,26,"activeItemKey"],[134,37,81,39],[134,42,81,44,"route"],[134,47,81,49],[134,48,81,50,"key"],[134,51,81,10],[135,0,82,10],[135,14,82,16,"color"],[135,19,82,21],[135,22,82,24,"focused"],[135,29,82,31],[135,32,82,34,"activeTintColor"],[135,47,82,31],[135,50,82,52,"inactiveTintColor"],[135,67,82,10],[136,0,83,10],[136,14,83,16,"backgroundColor"],[136,29,83,31],[136,32,83,34,"focused"],[136,39,83,41],[136,42,84,14,"activeBackgroundColor"],[136,63,83,41],[136,66,85,14,"inactiveBackgroundColor"],[136,89,83,10],[137,0,86,10],[137,14,86,16,"scene"],[137,19,86,21],[137,22,86,24],[138,0,86,26,"route"],[138,12,86,26,"route"],[138,17,86,31],[138,19,86,26,"route"],[138,24,86,24],[139,0,86,33,"index"],[139,12,86,33,"index"],[139,17,86,38],[139,19,86,33,"index"],[139,24,86,24],[140,0,86,40,"focused"],[140,12,86,40,"focused"],[140,19,86,47],[140,21,86,40,"focused"],[140,28,86,24],[141,0,86,49,"tintColor"],[141,12,86,49,"tintColor"],[141,21,86,58],[141,23,86,60,"color"],[142,0,86,24],[142,11,86,10],[143,0,87,10],[143,14,87,16,"icon"],[143,18,87,20],[143,21,87,23,"renderIcon"],[143,31,87,33],[143,32,87,34,"scene"],[143,37,87,33],[143,38,87,10],[144,0,88,10],[144,14,88,16,"label"],[144,19,88,21],[144,22,88,24,"getLabel"],[144,30,88,32],[144,31,88,33,"scene"],[144,36,88,32],[144,37,88,10],[145,0,89,10],[145,14,89,16,"accessibilityLabel"],[145,32,89,34],[145,35,90,12],[145,42,90,19,"label"],[145,47,90,12],[145,52,90,29],[145,60,90,12],[145,63,90,40,"label"],[145,68,90,12],[145,71,90,48,"undefined"],[145,80,89,10],[146,0,91,10],[146,14,91,16,"extraLabelStyle"],[146,29,91,31],[146,32,91,34,"focused"],[146,39,91,41],[146,42,92,14,"activeLabelStyle"],[146,58,91,41],[146,61,93,14,"inactiveLabelStyle"],[146,79,91,10],[147,0,94,10],[147,17,95,12],[147,46,95,13],[147,68,95,12],[148,0,96,14],[148,12,96,14],[148,15,96,17],[148,17,96,19,"route"],[148,22,96,24],[148,23,96,25,"key"],[148,26,95,12],[149,0,97,14],[149,12,97,14],[149,22,97,24],[149,28,95,12],[150,0,98,14],[150,12,98,14],[150,30,98,32],[150,32,98,34,"accessibilityLabel"],[150,50,95,12],[151,0,99,14],[151,12,99,14],[151,19,99,21],[151,21,99,23],[151,40,99,29],[152,0,100,16,"onItemPress"],[152,14,100,16,"onItemPress"],[152,25,100,27],[152,26,100,28],[153,0,100,30,"route"],[153,16,100,30,"route"],[153,21,100,35],[153,23,100,30,"route"],[153,28,100,28],[154,0,100,37,"focused"],[154,16,100,37,"focused"],[154,23,100,44],[154,25,100,37,"focused"],[155,0,100,28],[155,15,100,27],[155,16,100,16],[156,0,101,15],[156,13,95,12],[157,0,102,14],[157,12,102,14],[157,24,102,26],[157,26,102,28],[157,27,95,12],[158,0,95,12],[159,0,95,12],[160,0,95,12],[161,0,95,12],[162,0,95,12],[162,13,104,14],[162,42,104,15],[162,62,104,14],[163,0,105,16],[163,12,105,16],[163,17,105,21],[163,19,105,23],[163,20,105,24],[164,0,105,26,"backgroundColor"],[164,14,105,26,"backgroundColor"],[164,29,105,41],[164,31,105,26,"backgroundColor"],[165,0,105,24],[165,13,105,23],[165,15,105,45,"styles"],[165,21,105,51],[165,22,105,52,"item"],[165,26,105,23],[165,28,105,58,"itemStyle"],[165,37,105,23],[165,38,104,14],[166,0,106,16],[166,12,106,16],[166,22,106,26],[166,72,107,19,"drawerPosition"],[166,86,106,26],[166,88,107,36],[166,96,106,26],[166,135,108,19,"drawerPosition"],[166,149,108,33],[166,154,108,38],[166,160,108,19],[166,163,108,47],[166,170,108,19],[166,173,108,57],[166,179,106,26],[166,181,108,66],[166,188,106,26],[166,239,109,28],[166,246,106,26],[166,254,104,14],[167,0,104,14],[168,0,104,14],[169,0,104,14],[170,0,104,14],[171,0,104,14],[171,13,112,17,"icon"],[171,17,112,21],[171,20,113,18],[171,49,113,19],[171,66,113,18],[172,0,114,20],[172,12,114,20],[172,17,114,25],[172,19,114,27],[172,20,115,22,"styles"],[172,26,115,28],[172,27,115,29,"icon"],[172,31,114,27],[172,33,116,22,"focused"],[172,40,116,29],[172,43,116,32],[172,47,116,29],[172,50,116,39,"styles"],[172,56,116,45],[172,57,116,46,"inactiveIcon"],[172,69,114,27],[172,71,117,22,"iconContainerStyle"],[172,89,114,27],[172,90,113,18],[173,0,113,18],[174,0,113,18],[175,0,113,18],[176,0,113,18],[177,0,113,18],[177,13,120,21,"icon"],[177,17,113,18],[177,18,112,21],[177,21,122,20],[177,25,104,14],[177,27,123,17],[177,34,123,24,"label"],[177,39,123,17],[177,44,123,34],[177,52,123,17],[177,55,124,18],[177,84,124,19],[177,101,124,18],[178,0,125,20],[178,12,125,20],[178,17,125,25],[178,19,125,27],[178,20,126,22,"styles"],[178,26,126,28],[178,27,126,29,"label"],[178,32,125,27],[178,34,127,22],[179,0,127,24,"color"],[179,14,127,24,"color"],[179,19,127,29],[179,21,127,24,"color"],[180,0,127,22],[180,13,125,27],[180,15,128,22,"labelStyle"],[180,25,125,27],[180,27,129,22,"extraLabelStyle"],[180,42,125,27],[180,43,124,18],[181,0,124,18],[182,0,124,18],[183,0,124,18],[184,0,124,18],[185,0,124,18],[185,13,132,21,"label"],[185,18,124,18],[185,19,123,17],[185,22,135,18,"label"],[185,27,104,14],[185,28,95,12],[185,29,94,10],[186,0,140,9],[186,9,80,9],[186,10,79,6],[186,11,78,4],[187,0,143,3],[190,4,10,35,"React"],[190,19,10,41,"Component"],[190,28],[192,0,10,6,"DrawerNavigatorItems"],[192,2,10,6,"DrawerNavigatorItems"],[192,22],[192,23,11,9,"contextType"],[192,34],[192,37,11,23,"ThemeContext"],[192,55],[193,0,147,0,"DrawerNavigatorItems"],[193,2,147,0,"DrawerNavigatorItems"],[193,22,147,20],[193,23,147,21,"defaultProps"],[193,35,147,0],[193,38,147,36],[194,0,148,2,"activeTintColor"],[194,4,148,2,"activeTintColor"],[194,19,148,17],[194,21,148,19],[195,0,149,4,"light"],[195,6,149,4,"light"],[195,11,149,9],[195,13,149,11],[195,22,148,19],[196,0,150,4,"dark"],[196,6,150,4,"dark"],[196,10,150,8],[196,12,150,10],[197,0,148,19],[197,5,147,36],[198,0,152,2,"activeBackgroundColor"],[198,4,152,2,"activeBackgroundColor"],[198,25,152,23],[198,27,152,25],[199,0,153,4,"light"],[199,6,153,4,"light"],[199,11,153,9],[199,13,153,11],[199,33,152,25],[200,0,154,4,"dark"],[200,6,154,4,"dark"],[200,10,154,8],[200,12,154,10],[201,0,152,25],[201,5,147,36],[202,0,156,2,"inactiveTintColor"],[202,4,156,2,"inactiveTintColor"],[202,21,156,19],[202,23,156,21],[203,0,157,4,"light"],[203,6,157,4,"light"],[203,11,157,9],[203,13,157,11],[203,33,156,21],[204,0,158,4,"dark"],[204,6,158,4,"dark"],[204,10,158,8],[204,12,158,10],[205,0,156,21],[205,5,147,36],[206,0,160,2,"inactiveBackgroundColor"],[206,4,160,2,"inactiveBackgroundColor"],[206,27,160,25],[206,29,160,27],[207,0,147,36],[207,3,147,0],[209,0,163,0],[209,6,163,6,"styles"],[209,12,163,12],[209,15,163,15,"StyleSheet"],[209,39,163,26,"create"],[209,45,163,15],[209,46,163,33],[210,0,164,2,"container"],[210,4,164,2,"container"],[210,13,164,11],[210,15,164,13],[211,0,165,4,"paddingVertical"],[211,6,165,4,"paddingVertical"],[211,21,165,19],[211,23,165,21],[212,0,164,13],[212,5,163,33],[213,0,167,2,"item"],[213,4,167,2,"item"],[213,8,167,6],[213,10,167,8],[214,0,168,4,"flexDirection"],[214,6,168,4,"flexDirection"],[214,19,168,17],[214,21,168,19],[214,26,167,8],[215,0,169,4,"alignItems"],[215,6,169,4,"alignItems"],[215,16,169,14],[215,18,169,16],[216,0,167,8],[216,5,163,33],[217,0,171,2,"icon"],[217,4,171,2,"icon"],[217,8,171,6],[217,10,171,8],[218,0,172,4,"marginHorizontal"],[218,6,172,4,"marginHorizontal"],[218,22,172,20],[218,24,172,22],[218,26,171,8],[219,0,173,4,"width"],[219,6,173,4,"width"],[219,11,173,9],[219,13,173,11],[219,15,171,8],[220,0,174,4,"alignItems"],[220,6,174,4,"alignItems"],[220,16,174,14],[220,18,174,16],[221,0,171,8],[221,5,163,33],[222,0,176,2,"inactiveIcon"],[222,4,176,2,"inactiveIcon"],[222,16,176,14],[222,18,176,16],[223,0,181,4,"opacity"],[223,6,181,4,"opacity"],[223,13,181,11],[223,15,181,13],[224,0,176,16],[224,5,163,33],[225,0,183,2,"label"],[225,4,183,2,"label"],[225,9,183,7],[225,11,183,9],[226,0,184,4,"margin"],[226,6,184,4,"margin"],[226,12,184,10],[226,14,184,12],[226,16,183,9],[227,0,185,4,"fontWeight"],[227,6,185,4,"fontWeight"],[227,16,185,14],[227,18,185,16],[228,0,183,9],[229,0,163,33],[229,3,163,15],[229,4,163,0],[231,17,189,15,"DrawerNavigatorItems"],[231,37]]},"type":"js/module"}]}